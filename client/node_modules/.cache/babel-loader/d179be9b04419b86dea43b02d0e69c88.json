{"ast":null,"code":"var _jsxFileName = \"/Users/garvitanagpal/reportauto/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Avatar, Button, Paper, Grid, Typography, Container } from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { GoogleLogin } from \"react-google-login\";\nimport useStyles from \"./styles\";\nimport Input from \"./input\";\nimport Icon from \"./icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const handleShowPassword = () => setShowPassword(showPassword => !showPassword);\n\n  const switchMode = () => {\n    setIsSignUp(prevIsSignUp => !prevIsSignUp);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = res => {\n    console.log(res);\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google Sign In was unsuccessfull. Try again later.\");\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      className: classes.avatar,\n      children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: isSignUp ? \"Sign Up\" : \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"firstName\",\n            label: \"First Name\",\n            handleChange: handleChange,\n            autoFocus: true,\n            half: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"lastName\",\n            label: \"Last Name\",\n            handleChange: handleChange,\n            half: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          label: \"Email Address\",\n          handleChange: handleChange,\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          label: \"Password\",\n          handleChange: handleChange,\n          type: showPassword ? \"text\" : \"password\",\n          handleShowPassword: handleShowPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), isSignUp && /*#__PURE__*/_jsxDEV(Input, {\n          name: \"confirmPassword\",\n          label: \"Repeat Password\",\n          handleChange: handleChange,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        varient: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        children: isSignUp ? \"Sign Up\" : \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: \"515859419712-eiek5t6etgacrlni46mrsi389ujm38vq.apps.googleusercontent.com\",\n        render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.googleButton,\n          color: \"primary\",\n          fullWidth: true,\n          onClick: renderProps.onClick,\n          disabled: renderProps.disabled,\n          startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 28\n          }, this),\n          variant: \"contained\",\n          children: \"Google Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this),\n        onSuccess: googleSuccess,\n        onFailure: googleFailure,\n        cookiePolicy: \"single_host_origin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: switchMode,\n            children: isSignUp ? \"Already have an account? Sign in\" : \"Don't have an account? Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"C9PTQqlRrTux/9RJ1dNo2H0sfpA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/garvitanagpal/reportauto/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","LockOutlinedIcon","GoogleLogin","useStyles","Input","Icon","Auth","classes","isSignUp","setIsSignUp","handleSubmit","handleChange","handleShowPassword","setShowPassword","showPassword","switchMode","prevIsSignUp","googleSuccess","res","console","log","googleFailure","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { GoogleLogin } from \"react-google-login\";\n\nimport useStyles from \"./styles\";\nimport Input from \"./input\";\n\nimport Icon from \"./icon\";\n\nconst Auth = () => {\n  const classes = useStyles();\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  const handleSubmit = () => {};\n  const handleChange = () => {};\n  const handleShowPassword = () =>\n    setShowPassword((showPassword) => !showPassword);\n  const switchMode = () => {\n    setIsSignUp((prevIsSignUp) => !prevIsSignUp);\n    handleShowPassword(false);\n  };\n  const googleSuccess = (res) => {\n    console.log(res);\n  };\n  const googleFailure = () => {\n    console.log(\"Google Sign In was unsuccessfull. Try again later.\");\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {/* <Paper className={classes.paper} elevation={3}> */}\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{isSignUp ? \"Sign Up\" : \"Sign In\"}</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {isSignUp && (\n              <>\n                <Input\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  autoFocus\n                  half\n                ></Input>\n\n                <Input\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  handleChange={handleChange}\n                  half\n                ></Input>\n              </>\n            )}\n            <Input\n              name=\"email\"\n              label=\"Email Address\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            <Input\n              name=\"password\"\n              label=\"Password\"\n              handleChange={handleChange}\n              type={showPassword ? \"text\" : \"password\"}\n              handleShowPassword={handleShowPassword}\n            />\n            {isSignUp && (\n              <Input\n                name=\"confirmPassword\"\n                label=\"Repeat Password\"\n                handleChange={handleChange}\n                type=\"password\"\n              />\n            )}\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            varient=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {isSignUp ? \"Sign Up\" : \"Sign In\"}\n          </Button>\n          <GoogleLogin\n            clientId=\"515859419712-eiek5t6etgacrlni46mrsi389ujm38vq.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                className={classes.googleButton}\n                color=\"primary\"\n                fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant=\"contained\"\n              >\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                {isSignUp\n                  ? \"Already have an account? Sign in\"\n                  : \"Don't have an account? Sign Up\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      {/* </Paper> */}\n    </Container>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}