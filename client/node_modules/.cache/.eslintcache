[{"/Users/garvitanagpal/reportauto/client/src/index.js":"1","/Users/garvitanagpal/reportauto/client/src/App.js":"2","/Users/garvitanagpal/reportauto/client/src/components/Home.js":"3","/Users/garvitanagpal/reportauto/client/src/components/Navbar.js":"4","/Users/garvitanagpal/reportauto/client/src/components/Auth/Auth.js":"5","/Users/garvitanagpal/reportauto/client/src/components/Reports/CourseDescription.js":"6","/Users/garvitanagpal/reportauto/client/src/components/styles.js":"7","/Users/garvitanagpal/reportauto/client/src/components/Auth/styles.js":"8","/Users/garvitanagpal/reportauto/client/src/components/Auth/icon.js":"9","/Users/garvitanagpal/reportauto/client/src/components/Auth/input.js":"10","/Users/garvitanagpal/reportauto/client/src/components/Reports/styles.js":"11","/Users/garvitanagpal/reportauto/client/src/components/homeStyles.js":"12","/Users/garvitanagpal/reportauto/client/src/components/CustomNavbar/CustomNavbar.js":"13","/Users/garvitanagpal/reportauto/client/src/components/CustomNavbar/customNavStyles.js":"14","/Users/garvitanagpal/reportauto/client/src/components/Reports/CourseDescription1.js":"15","/Users/garvitanagpal/reportauto/client/src/components/Reports/courseDescriptionStyles.js":"16","/Users/garvitanagpal/reportauto/client/src/components/Reports/useForm.js":"17","/Users/garvitanagpal/reportauto/client/src/components/controls/input.js":"18","/Users/garvitanagpal/reportauto/client/src/components/controls/RadioGroup.js":"19","/Users/garvitanagpal/reportauto/client/src/components/controls/Controls.js":"20","/Users/garvitanagpal/reportauto/client/src/components/controls/Select.js":"21","/Users/garvitanagpal/reportauto/client/src/services/dropdownData.js":"22","/Users/garvitanagpal/reportauto/client/src/components/controls/DatePicker.js":"23","/Users/garvitanagpal/reportauto/client/src/components/Reports/OpeningReport.js":"24","/Users/garvitanagpal/reportauto/client/src/components/Reports/OpeningReportsStyles.js":"25","/Users/garvitanagpal/reportauto/client/src/components/Reports/attainmentReportStyles.js":"26","/Users/garvitanagpal/reportauto/client/src/components/Reports/AttainmentReport.js":"27"},{"size":168,"mtime":1648257380000,"results":"28","hashOfConfig":"29"},{"size":1283,"mtime":1651989365484,"results":"30","hashOfConfig":"29"},{"size":3464,"mtime":1651391116263,"results":"31","hashOfConfig":"29"},{"size":1814,"mtime":1650635171117,"results":"32","hashOfConfig":"29"},{"size":3827,"mtime":1651409712079,"results":"33","hashOfConfig":"29"},{"size":16193,"mtime":1651787031317,"results":"34","hashOfConfig":"29"},{"size":935,"mtime":1648257380000,"results":"35","hashOfConfig":"29"},{"size":744,"mtime":1651391593976,"results":"36","hashOfConfig":"29"},{"size":502,"mtime":1648257380000,"results":"37","hashOfConfig":"29"},{"size":1070,"mtime":1648257380000,"results":"38","hashOfConfig":"29"},{"size":329,"mtime":1648257380000,"results":"39","hashOfConfig":"29"},{"size":987,"mtime":1651387903479,"results":"40","hashOfConfig":"29"},{"size":2168,"mtime":1652031841909,"results":"41","hashOfConfig":"29"},{"size":1429,"mtime":1651922242593,"results":"42","hashOfConfig":"29"},{"size":25365,"mtime":1652042072088,"results":"43","hashOfConfig":"29"},{"size":860,"mtime":1652000210401,"results":"44","hashOfConfig":"29"},{"size":569,"mtime":1651760706779,"results":"45","hashOfConfig":"29"},{"size":313,"mtime":1651784439225,"results":"46","hashOfConfig":"29"},{"size":643,"mtime":1651760588944,"results":"47","hashOfConfig":"29"},{"size":261,"mtime":1651780712926,"results":"48","hashOfConfig":"29"},{"size":723,"mtime":1652035380182,"results":"49","hashOfConfig":"29"},{"size":4519,"mtime":1652034365203,"results":"50","hashOfConfig":"29"},{"size":743,"mtime":1651781326857,"results":"51","hashOfConfig":"29"},{"size":23053,"mtime":1652000521046,"results":"52","hashOfConfig":"29"},{"size":413,"mtime":1652005782611,"results":"53","hashOfConfig":"29"},{"size":460,"mtime":1651990944086,"results":"54","hashOfConfig":"29"},{"size":15116,"mtime":1651992680324,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"gcyex8",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"59"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},"/Users/garvitanagpal/reportauto/client/src/index.js",[],[],[],"/Users/garvitanagpal/reportauto/client/src/App.js",["151","152"],[],"/Users/garvitanagpal/reportauto/client/src/components/Home.js",["153","154","155","156","157","158","159","160"],[],"import React, { useState } from \"react\";\nimport CourseDescription from \"./Reports/CourseDescription\";\nimport { Button, Typography, Container, Paper } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport useStyles from \"./homeStyles\";\nimport AliceCarousel from 'react-alice-carousel';\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport pic1 from '../images/pic1.jpg';\nimport pic2 from '../images/pic2.jpg';\nimport pic6 from '../images/pic6.jpg';\n\nconst Home = () => {\n  const classes = useStyles();\n  const [course, setCourse] = useState(false);\n  return (\n    <Container className={classes.headContainer}>\n      <div className={classes.leftContainer}>\n        <Typography className={classes.leftText}>Boost productivity</Typography>\n\n        <Typography className={classes.leftText} >\n          with Jaypee \n        </Typography>\n        <Typography className={classes.leftText} >\n        Automator\n        </Typography>\n        <div className={classes.registerLinkBox}>\n\n        <Link to='auth/' className={classes.registerLink}>\n          Register\n        </Link>\n        </div>\n\n\n      </div>\n      <div className={classes.rightContainer}>\n      <AliceCarousel autoPlay autoPlayInterval='2000' className={classes.slider}>\n        <img src={pic1}/>\n        <img src={pic2}/>\n        \n       \n\n      </AliceCarousel>\n\n      </div>\n\n      \n      {/* <h4>Reports you can edit:</h4>\n        <ol>\n          <li>\n          <div style={{ flexDirection: \"row\" }}>\n            <Button className={classes.reportButton\n            } component={Link} to=\"/CourseDescription\" color=\"#3b5998\">\n              Course Description\n            </Button>\n          </div>\n          </li> */}\n\n      {/* <div style={{ flexDirection: \"row\" }}>\n        <Button component={Link} to=\"/CourseDescription\">\n          {\">>\"} Closing Report\n        </Button>\n      </div>\n      <div style={{ flexDirection: \"row\" }}>\n        <Button component={Link} to=\"/CourseDescription\">\n          {\">>\"} CO-PO-PSO attainment Report\n        </Button>\n      </div>\n      <div style={{ flexDirection: \"row\" }}>\n        <Button component={Link} to=\"/CourseDescription\">\n          {\">>\"} OBE document verification\n        </Button>\n      </div>\n      <div style={{ flexDirection: \"row\" }}>\n        <Button component={Link} to=\"/CourseDescription\">\n          {\">>\"} Opening Report\n        </Button>\n      </div> */}\n      {/* <li>\n      <div className={classes.listContainer}>\n        <Button className={classes.reportButton\n        } component={Link} to=\"/CourseDescription\" color=\"#3b5998\">\n           Opening Report\n        </Button>\n      </div>\n      </li>\n      <li>\n      <div className={classes.listContainer}>\n        <Button className={classes.reportButton\n        } component={Link} to=\"/CourseDescription\" color=\"#3b5998\">\n           Closing Report\n        </Button>\n      </div>\n      </li>\n      <li>\n      <div className={classes.listContainer}>\n        <Button className={classes.reportButton\n        } component={Link} to=\"/CourseDescription\" color=\"#3b5998\">\n           Attainment Report\n        </Button>\n      </div>\n      </li>\n      <li>\n\n      <div className={classes.listContainer}>\n        <Button className={classes.reportButton\n        } component={Link} to=\"/CourseDescription\" color=\"#3b5998\">\n           OBE DOC Verification \n        </Button>\n      </div>\n      </li>\n     \n        </ol> */}\n\n      \n    </Container>\n\n  );\n};\nexport default Home;\n","/Users/garvitanagpal/reportauto/client/src/components/Navbar.js",["161"],[],"import React from \"react\";\nimport { AppBar, Typography, Toolbar, Button, Avatar } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport useStyles from \"./styles\";\nimport automation from \"../images/automation.jpeg\";\nimport Auth from \"./Auth/Auth\";\n\nconst Navbar = () => {\n  const classes = useStyles();\n  const user = null;\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n      <div className={classes.brandContainer}>\n        {/* <Typography\n          component={Link}\n          to=\"/\"\n          className={classes.heading}\n          variant=\"h4\"\n          align=\"center\"\n        >\n          Home\n        </Typography> */}\n        <Button component={Link} to=\"/App\">\n          <img\n            className={classes.image}\n            src={automation}\n            alt=\"icon\"\n            height=\"60\"\n          />\n        </Button>\n      </div>\n      <Toolbar className={classes.toolbar}>\n        {user ? (\n          <div className={classes.profile}>\n            <Avatar\n              className={classes.purple}\n              alt={user.result.name}\n              src={user.result.imageUrl}\n            >\n              {user.result.charAt(0)}\n            </Avatar>\n            <Typography className={classes.userName} variant=\"h6\">\n              {user.result.name}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              className={classes.logout}\n              color=\"secondary\"\n            >\n              Logout\n            </Button>\n          </div>\n        ) : (\n          <Button\n            component={Link}\n            to=\"/auth\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Sign In\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","/Users/garvitanagpal/reportauto/client/src/components/Auth/Auth.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/CourseDescription.js",["162","163","164","165","166","167","168","169","170","171"],[],"import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Paper } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport { mergeClasses } from \"@material-ui/styles\";\nimport { DropdownButton, Dropdown } from \"@material-ui/core\";\nconst CourseDescription = () => {\n  const [inputFeilds, setInputFeilds] = useState([\n    {\n      moduleName: \"\",\n      moduleDescription: \"\",\n      moduleLectures: \"\",\n    },\n  ]);\n  const [coordinator, setCoordinator] = useState([\n    {\n      coordinatorName: \"\",\n      coordinatorCode: \"\",\n    },\n  ]);\n  const [faculty, setFaculty] = useState([\n    {\n      facultyName: \"\",\n      facultyCode: \"\",\n    },\n  ]);\n\n  const [recommendedBooks, setRecommendedBooks] = useState([\n    {\n      bookName: \"\",\n    },\n  ]);\n  const [courseCode, setCourseCode] = useState(\"\");\n  const [semesterTime, setSemesterTime] = useState(\"\");\n  const [semester, setSemester] = useState(\"\");\n  const [branch, setBranch] = useState(\"\");\n  const [monthFrom, setMonthFrom] = useState(\"\");\n  const [monthTo, setMonthTo] = useState(\"\");\n  const [session, setSession] = useState(\"\");\n  const [courseName, setCourseName] = useState(\"\");\n  const [courseCreditLecture, setCourseCreditLecture] = useState(\"\");\n  const [contactHours, setContactHours] = useState(\"\");\n  const [courseCreditTutorial, setCourseCreditTutorial] = useState(\"\");\n  const [courseCreditLab, setCourseCreditLab] = useState(\"\");\n\n  const handleChangeInput = (index, event) => {\n    const values = [...inputFeilds];\n    values[index][event.target.name] = event.target.value;\n    setInputFeilds(values);\n  };\n  const handleChangeFaculty = (index2, event) => {\n    const values = [...faculty];\n    values[index2][event.target.name] = event.target.value;\n    setFaculty(values);\n  };\n  const handleMinusFaculty = (index2) => {\n    const value = [...faculty];\n    value.splice(index2, 1);\n    setFaculty(value);\n  };\n  const handleplusFaculty = () => {\n    setFaculty([\n      ...faculty,\n      {\n        facultyName: \"\",\n        facultyCode: \"\",\n      },\n    ]);\n  };\n\n  const handleChangeCoordinator = (index1, event) => {\n    const values = [...coordinator];\n    values[index1][event.target.name] = event.target.value;\n    setCoordinator(values);\n  };\n  const handleMinusCoordinator = (index1) => {\n    const value = [...coordinator];\n    value.splice(index1, 1);\n    setCoordinator(value);\n  };\n  const handleplusCoordinator = () => {\n    setCoordinator([\n      ...coordinator,\n      {\n        coordinatorName: \"\",\n        coordinatorCode: \"\",\n      },\n    ]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFeilds\", inputFeilds);\n  };\n\n  const handleplus = () => {\n    setInputFeilds([\n      ...inputFeilds,\n      {\n        moduleName: \"\",\n        moduleDescription: \"\",\n        moduleLectures: \"\",\n      },\n    ]);\n  };\n  const handleMinus = (index) => {\n    const value = [...inputFeilds];\n    value.splice(index, 1);\n    setInputFeilds(value);\n  };\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          <h1 style={{ alignContent: \"center\", alignItems: \"center\" }}>\n            Course Description\n          </h1>\n          <label>\n            Course Name:\n            <select\n              value={courseName}\n              onChange={(event) => {\n                setCourseName(event.target.value);\n                setCourseCode(\n                  event.target.value ===\n                    \"Fundamentals of Distributed and Cloud Computing\"\n                    ? \"MA324\"\n                    : event.target.value ===\n                      \"Computer Networks and internet of things\"\n                    ? \"PK789\"\n                    : event.target.value === \"Applied Mathematics\"\n                    ? \"IKA899\"\n                    : \"GH763\"\n                );\n              }}\n            >\n              <option selected value=\"null\">\n                Select\n              </option>\n              <option value=\"Fundamentals of Distributed and Cloud Computing\">\n                Fundamentals of Distributed and Cloud Computing\n              </option>\n              <option value=\"Computer Networks and internet of things\">\n                Computer Networks and internet of things\n              </option>\n              <option value=\"Applied Mathematics\">Applied Mathematics</option>\n              <option value=\"Web Technology and Cyber Security\">\n                Web Technology and Cyber Security\n              </option>\n            </select>\n          </label>\n          {/* <TextField\n            name=\"CourseName\"\n            label=\"Course Name\"\n            value={courseName}\n            onChange={(event) => setCourseName(event.target.value)}\n          /> */}\n          <div style={{ height: 20 }}></div>\n          <label>\n            Course Code:\n            <TextField\n              name=\"CourseCode\"\n              value={courseCode}\n              onChange={(event) => setCourseCode(event.target.value)}\n            />\n          </label>\n          <div style={{ height: 20 }}></div>\n          <label>\n            Semester Type:\n            <select\n              value={semester}\n              onChange={(event) => setSemester(event.target.value)}\n            >\n              <option selected value=\"null\">\n                Select\n              </option>\n              <option value=\"odd\">Odd</option>\n              <option value=\"even\">Even</option>\n            </select>\n          </label>\n          <div style={{ height: 20 }}></div>\n          <label>\n            Branch:\n            <select\n              value={branch}\n              onChange={(event) => setBranch(event.target.value)}\n            >\n              <option selected value=\"null\">\n                Select\n              </option>\n              <option value=\"CSE\">CSE</option>\n              <option value=\"ECE\">ECE</option>\n\n              <option value=\"BioTech\">BioTech</option>\n            </select>\n          </label>\n          <div style={{ height: 20 }}></div>\n          <label>\n            Month From:\n            <select\n              value={monthFrom}\n              onChange={(event) => setMonthFrom(event.target.value)}\n            >\n              <option selected value=\"null\">\n                Select\n              </option>\n              <option value=\"Jan\">January</option>\n              <option value=\"Feb\">February</option>\n\n              <option value=\"Mar\">March</option>\n              <option value=\"Apr\">April</option>\n              <option value=\"May\">May</option>\n              <option value=\"June\">June</option>\n              <option value=\"July\">July</option>\n              <option value=\"August\">August</option>\n              <option value=\"Sept\">September</option>\n              <option value=\"Oct\">October</option>\n              <option value=\"Nov\">November</option>\n              <option value=\"Dec\">December</option>\n            </select>\n          </label>\n          <label>\n            Month To:\n            <select\n              value={monthTo}\n              onChange={(event) => setMonthTo(event.target.value)}\n            >\n              <option selected value=\"null\">\n                Select\n              </option>\n              <option value=\"Jan\">January</option>\n              <option value=\"Feb\">February</option>\n\n              <option value=\"Mar\">March</option>\n              <option value=\"Apr\">April</option>\n              <option value=\"May\">May</option>\n              <option value=\"June\">June</option>\n              <option value=\"July\">July</option>\n              <option value=\"August\">August</option>\n              <option value=\"Sept\">September</option>\n              <option value=\"Oct\">October</option>\n              <option value=\"Nov\">November</option>\n              <option value=\"Dec\">December</option>\n            </select>\n          </label>\n          <div style={{ height: 20 }}></div>\n          <label>Course Credits(L:T:P):</label>\n          <label>\n            <select\n              value={courseCreditLecture}\n              onChange={(event) => setCourseCreditLecture(event.target.value)}\n            >\n              <option selected value=\"null\">\n                L\n              </option>\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n          </label>\n          <label>\n            <select\n              value={courseCreditTutorial}\n              onChange={(event) => setCourseCreditTutorial(event.target.value)}\n            >\n              <option selected value=\"null\">\n                T\n              </option>\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n          </label>\n          <label>\n            <select\n              value={courseCreditLab}\n              onChange={(event) => setCourseCreditLab(event.target.value)}\n            >\n              <option selected value=\"null\">\n                P\n              </option>\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n          </label>\n          <label>\n            Contact Hours:\n            <select\n              value={contactHours}\n              onChange={(event) => setContactHours(event.target.value)}\n            >\n              <option selected value=\"null\">\n                select\n              </option>\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n          </label>\n\n          <div style={{ height: 20 }}></div>\n\n          <div style={{ height: 20 }}></div>\n\n          <div style={{ height: 20 }}></div>\n          {/* <TextField\n            id=\"outlined-multiline-static\"\n            label=\"Multiline\"\n            multiline\n            rows={10}\n            variant=\"outlined\"\n            maxRows={Infinity}\n          />\n          <h2>Enter Evaluation Criteria</h2> */}\n          <h3>Enter coordinator details:</h3>\n\n          {coordinator.map((coordinator, index1) => (\n            <label>\n              <div\n                key={index1}\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-evenly\",\n                  left: 0,\n                  margin: 20,\n                }}\n              >\n                <TextField\n                  name=\"coordinatorName\"\n                  label=\"Coordinator Name\"\n                  variant=\"filled\"\n                  value={coordinator.coordinatorName}\n                  onChange={(event) => handleChangeCoordinator(index1, event)}\n                />\n\n                <TextField\n                  name=\"coordinatorCode\"\n                  label=\"Coordinator Code\"\n                  variant=\"filled\"\n                  value={coordinator.coordinatorCode}\n                  onChange={(event) => handleChangeCoordinator(index1, event)}\n                />\n                <IconButton onClick={() => handleMinusCoordinator(index1)}>\n                  <RemoveIcon />\n                </IconButton>\n                <IconButton onClick={() => handleplusCoordinator()}>\n                  <AddIcon />\n                </IconButton>\n              </div>\n            </label>\n          ))}\n          <h3>Enter faculty details:</h3>\n\n          {faculty.map((faculty, index2) => (\n            <label>\n              <div\n                key={index2}\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-evenly\",\n                  left: 0,\n                  margin: 20,\n                }}\n              >\n                <TextField\n                  name=\"facultyName\"\n                  label=\"Faculty Name\"\n                  variant=\"filled\"\n                  value={faculty.facultyName}\n                  onChange={(event) => handleChangeFaculty(index2, event)}\n                />\n\n                <TextField\n                  name=\"facultyCode\"\n                  label=\"Faculty Code\"\n                  variant=\"filled\"\n                  value={faculty.facultyCode}\n                  onChange={(event) => handleChangeFaculty(index2, event)}\n                />\n                <IconButton onClick={() => handleMinusFaculty(index2)}>\n                  <RemoveIcon />\n                </IconButton>\n                <IconButton onClick={() => handleplusFaculty()}>\n                  <AddIcon />\n                </IconButton>\n              </div>\n            </label>\n          ))}\n\n          {/* <form onSubmit={handleSubmit}> */}\n          <h3>Enter module details:</h3>\n          {inputFeilds.map((inputFeilds, index) => (\n            <label>\n              <div\n                key={index}\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-evenly\",\n                  left: 0,\n                  margin: 20,\n                }}\n              >\n                <TextField\n                  name=\"moduleName\"\n                  label=\"Module Name\"\n                  variant=\"filled\"\n                  value={inputFeilds.moduleName}\n                  onChange={(event) => handleChangeInput(index, event)}\n                />\n\n                <TextField\n                  name=\"moduleDescription\"\n                  label=\"Topics in the Module\"\n                  variant=\"filled\"\n                  value={inputFeilds.moduleDescription}\n                  onChange={(event) => handleChangeInput(index, event)}\n                />\n                <TextField\n                  name=\"moduleLectures\"\n                  label=\"Lectures in the module\"\n                  variant=\"filled\"\n                  value={inputFeilds.moduleLectures}\n                  onChange={(event) => handleChangeInput(index, event)}\n                />\n                <IconButton onClick={() => handleMinus(index)}>\n                  <RemoveIcon />\n                </IconButton>\n                <IconButton onClick={() => handleplus()}>\n                  <AddIcon />\n                </IconButton>\n              </div>\n            </label>\n          ))}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={handleSubmit}\n            style={{ margin: 20 }}\n          >\n            Send\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default CourseDescription;\n","/Users/garvitanagpal/reportauto/client/src/components/styles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Auth/styles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Auth/icon.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Auth/input.js",["172"],[],"import React from \"react\";\nimport { TextField, IconButton, Grid, InputAdornment } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nconst input = ({\n  name,\n  handleChange,\n  autoFocus,\n  type,\n  handleShowPassword,\n  half,\n  label,\n}) => {\n  return (\n    <Grid item xs={12} sm={half ? 6 : 12}>\n      <TextField\n        name={name}\n        onChange={handleChange}\n        variant=\"outlined\"\n        required\n        fullWidth\n        label={label}\n        autofocus={autoFocus}\n        type={type}\n        InputProps={\n          name === \"password\"\n            ? {\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton onClick={handleShowPassword}>\n                      {type == \"password\" ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }\n            : null\n        }\n      />\n    </Grid>\n  );\n};\n\nexport default input;\n","/Users/garvitanagpal/reportauto/client/src/components/Reports/styles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/homeStyles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/CustomNavbar/CustomNavbar.js",["173","174","175","176","177","178","179","180"],[],"import React from \"react\";\nimport automation from \"../../images/automation.jpeg\";\nimport useStyles from \"./customNavStyles\";\nimport {\n  Container,\n  Typography,\n  Button,\n  text,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n// import KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n// import IconButton from '@material-ui/core/IconButton';\n// import { IoIosArrowDown } from \"react-icons/io\";\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\nimport Auth from \"../Auth/Auth\";\nimport Home from \"../Home\";\n\nconst CustomNavbar = () => {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.navbarContainer}>\n      <div className={classes.topContainer}>\n        <img src={automation} className={classes.jiitlogo} />\n        <div className={classes.topSubContainer}>\n          <Link to=\"/auth\" className={classes.signinLink}>\n            Sign in\n          </Link>\n          {/* <Link to='/auth'> */}\n          {/* Sing in */}\n          {/* <text className={classes.topSubContainer}>Sign in</text> */}\n          {/* </Link> */}\n\n          {/* <MdOutlineKeyboardArrowDown className={classes.arrowLogo} /> */}\n        </div>\n      </div>\n      <div className={classes.navbarsecond}>\n        <Link to=\"/\" className={classes.automationLink}>\n          AUTOMATION\n        </Link>\n        <Link to=\"/courseDescription1\" className={classes.automationLink}>\n          Reports\n        </Link>\n        {/* <Link to=\"/courseDescription1\" className={classes.automationLink}>\n          Reports\n        </Link> */}\n        {/* <Link to=\"/openingReport\" className={classes.automationLink}>\n          Reports\n        </Link> */}\n        <Link to=\"/attainmentReport\" className={classes.automationLink}>\n          Reports\n        </Link>\n\n        {/* <text className={classes.navbarText}>\n                    Reports\n                </text> */}\n        <text className={classes.navbarText}>My Reports</text>\n        <text className={classes.navbarText}>My Profile</text>\n\n        <text className={classes.navbarText}>About Us</text>\n      </div>\n    </Container>\n  );\n};\n\nexport default CustomNavbar;\n",[],"/Users/garvitanagpal/reportauto/client/src/components/CustomNavbar/customNavStyles.js",["181"],[],"import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  automationLink: {\n    textDecoration: \"none\",\n    fontFamily: \"Raleway\",\n    color: \"#191919\",\n    fontSize: 15,\n    padding: 5,\n    marginLeft: 20,\n  },\n  signinLink: {\n    textDecoration: \"none\",\n    fontFamily: \"Raleway\",\n    color: \"#191919\",\n    fontSize: 15,\n    padding: 5,\n    marginLeft: 20,\n    borderStyle: \"solid\",\n    borderLeftWidth: 0.25,\n    borderRightWidth: 0.25,\n    borderTopWidth: 0.25,\n    borderBottomWidth: 0.25,\n  },\n  arrowLogo: {\n    paddingLeft: 7,\n  },\n  buttonLogo: {\n    height: 20,\n    width: 1,\n    marginLeft: -20,\n  },\n  jiitlogo: {\n    flex: \"row\",\n    height: 80,\n    width: 70,\n    marginLeft: -100,\n  },\n  //   mainCustomNavbar: {\n  //     widht: \"100%\",\n  //   },\n\n  //   mainDiv: {\n  //     backgroundColor: \"#8083c9\",\n  //   },\n  navbarButtons: {\n    padding: 0,\n  },\n  navbarContainer: {\n    flexDirection: \"column\",\n  },\n  navbarsecond: {\n    flexDirection: \"row\",\n    marginLeft: -135,\n    marginTop: -20,\n    marginLeft: -130,\n    // backgroundColor: \"#8083c9\",\n  },\n  navbarText: {\n    color: \"#191919\",\n    fontSize: 15,\n    fontFamily: \"Raleway\",\n    padding: 30,\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    // backgroundColor: \"#8083c9\",\n  },\n  topSubContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    fontSize: 15,\n    fontFamily: \"Raleway\",\n  },\n}));\n",[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/CourseDescription1.js",["182","183","184","185","186","187","188","189","190"],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/courseDescriptionStyles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/useForm.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/controls/input.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/controls/RadioGroup.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/controls/Controls.js",["191"],[],"import React from \"react\";\nimport Input from \"./input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport DatePicker from \"./DatePicker\";\n\nconst Controls = {\n  Input,\n  RadioGroup,\n  Select,\n  DatePicker,\n};\n\nexport default Controls;\n","/Users/garvitanagpal/reportauto/client/src/components/controls/Select.js",["192","193"],[],"import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select as MuiSelect,\n  MenuItem,\n  FormHelperText,\n} from \"@material-ui/core\";\n\nexport default function Select(props) {\n  const { name, label, value, error = null, onChange, options } = props;\n\n  return (\n    <FormControl variant=\"outlined\">\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect label={label} name={name} value={value} onChange={onChange}>\n        <MenuItem value=\"\">None</MenuItem>\n        {options.map((item) => (\n          <MenuItem key={item.id} value={item.id}>\n            {item.title}\n          </MenuItem>\n        ))}\n      </MuiSelect>\n      {/* {error && <FormHelperText>{error}</FormHelperText>} */}\n    </FormControl>\n  );\n}\n","/Users/garvitanagpal/reportauto/client/src/services/dropdownData.js",["194","195"],[],"/Users/garvitanagpal/reportauto/client/src/components/controls/DatePicker.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/OpeningReport.js",["196","197","198","199","200","201","202","203","204","205","206"],[],"import React from \"react\";\nimport useStyles from \"./OpeningReportsStyles\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Container,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm, Form } from \"./useForm\";\nimport Controls from \"../controls/Controls\";\nimport * as dropdownService from \"../../services/dropdownData\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst OpeningReport = () => {\n  const classes = useStyles();\n  const [departmentName, setDepartmentName] = useState(\"\");\n  const intialFValues = {\n    departmentName: \"Department of Computer Science & Enginerring and IT\",\n    programName: \"\",\n    semester: \"\",\n    branch: \"\",\n    courseName: \"\",\n    courseCode: \"\",\n    innovativeTeaching: \"\",\n    weakLearners: \"\",\n    brightStudents: \"\",\n    evalStrategy: \"\",\n  };\n  const { values, setValues, handleInputChange } = useForm(intialFValues);\n  const [coordinator, setCoordinator] = useState([\n    {\n      coordinatorName: \"\",\n      coordinatorCode: \"\",\n    },\n  ]);\n  const handleCo = (index4, event) => {\n    const values = [...mappingValues];\n    values[index4][event.target.name] = event.target.value;\n    setMappingValues(values);\n  };\n  const handlePlusMapping = () => {\n    setMappingValues([\n      ...mappingValues,\n      {\n        co: \"\",\n        po1: \"\",\n        po2: \"\",\n        po3: \"\",\n        po4: \"\",\n        po5: \"\",\n        po6: \"\",\n        po7: \"\",\n        po8: \"\",\n        po9: \"\",\n        po10: \"\",\n        po11: \"\",\n        po12: \"\",\n        pso1: \"\",\n        pso2: \"\",\n      },\n    ]);\n  };\n\n  const handleMinuMapping = (index1) => {\n    const value = [...mappingValues];\n    value.splice(index1, 1);\n    setMappingValues(value);\n  };\n  const handleplusCoordinator = () => {\n    setCoordinator([\n      ...coordinator,\n      {\n        coordinatorName: \"\",\n        coordinatorCode: \"\",\n      },\n    ]);\n  };\n  const handleMinusCoordinator = (index1) => {\n    const value = [...coordinator];\n    value.splice(index1, 1);\n    setCoordinator(value);\n  };\n  const handleChangeCoordinator = (index1, event) => {\n    const values = [...coordinator];\n    values[index1][event.target.name] = event.target.value;\n    setCoordinator(values);\n  };\n  const handleplusCourseOutcome = (index3, event) => {\n    setCourseOutcome([\n      ...courseOutcome,\n      {\n        courseOutcomeNum: \"\",\n        courseOutcomeDescription: \"\",\n        courseOutcomeLevel: \"\",\n      },\n    ]);\n  };\n  const handleMinusCourseOutcome = (index3) => {\n    const value = [...courseOutcome];\n    value.splice(index3, 1);\n    setCourseOutcome(value);\n  };\n  const handleChangeCourseOutcome = (index3, event) => {\n    const values = [...courseOutcome];\n    values[index3][event.target.name] = event.target.value;\n    setCourseOutcome(values);\n  };\n  const handleChangeGaps = (index5, event) => {\n    const values = [...gaps];\n    values[index5][event.target.name] = event.target.value;\n    setGaps(values);\n  };\n  const handleplusGaps = (index5, event) => {\n    setGaps([\n      ...gaps,\n      {\n        topicsToBeIntroduced: \"\",\n        strengthenCo: \"\",\n        strengthenPoPso: \"\",\n        methodOfIdentification: \"\",\n      },\n    ]);\n  };\n  const handleMinusGaps = (index5) => {\n    const value = [...gaps];\n    value.splice(index5, 1);\n    setGaps(value);\n  };\n  const [courseOutcome, setCourseOutcome] = useState([\n    {\n      courseOutcomeNum: \"\",\n      courseOutcomeDescription: \"\",\n      courseOutcomeLevel: \"\",\n    },\n  ]);\n  const programOptions = [\n    { id: 0, title: \"B.Tech(IT)\" },\n    { id: 1, title: \"B.Tech(CSE)\" },\n    { id: 2, title: \"INTGT(CSE)\" },\n    { id: 3, title: \"M.Tech(CSE)\" },\n    { id: 4, title: \"M.Tech(DA)\" },\n  ];\n  const semesterItems = [\n    { id: 0, title: \"Odd\" },\n    { id: 1, title: \"Even\" },\n  ];\n  const [mappingValues, setMappingValues] = useState([\n    {\n      co: \"\",\n      po1: \"\",\n      po2: \"\",\n      po3: \"\",\n      po4: \"\",\n      po5: \"\",\n      po6: \"\",\n      po7: \"\",\n      po8: \"\",\n      po9: \"\",\n      po10: \"\",\n      po11: \"\",\n      po12: \"\",\n      pso1: \"\",\n      pso2: \"\",\n    },\n  ]);\n  const [gaps, setGaps] = useState([\n    {\n      topicsToBeIntroduced: \"\",\n      strengthenCo: \"\",\n      strengthenPoPso: \"\",\n      methodOfIdentification: \"\",\n    },\n  ]);\n\n  const [modifications, setModifications] = useState([\n    {\n      detailsOfModifications: \"\",\n      justfications: \"\",\n      strengthensPos: \"\",\n    },\n  ]);\n  const handleChangeModifications = (index6, event) => {\n    const values = [...modifications];\n    values[index6][event.target.name] = event.target.value;\n    setModifications(values);\n  };\n  const handlePlusModifications = (index6, event) => {\n    setModifications([\n      ...modifications,\n      {\n        detailsOfModifications: \"\",\n        justfications: \"\",\n        strengthensPos: \"\",\n      },\n    ]);\n  };\n  const handleMinusModifications = (index6) => {\n    const value = [...modifications];\n    value.splice(index6, 1);\n    setModifications(value);\n  };\n  const [actions, setActions] = useState([\n    {\n      cos: \"\",\n      attainments: \"\",\n      actionsToBeTaken: \"\",\n      strengthensPoPso: \"\",\n    },\n  ]);\n  const handleChangeActions = (index7, event) => {\n    const values = [...actions];\n    values[index7][event.target.name] = event.target.value;\n    setActions(values);\n  };\n  const handlePlusActions = (index7, event) => {\n    setActions([\n      ...actions,\n      {\n        cos: \"\",\n        attainments: \"\",\n        actionsToBeTaken: \"\",\n        strengthensPoPso: \"\",\n      },\n    ]);\n  };\n  const handleMinusActions = (index7) => {\n    const value = [...actions];\n    value.splice(index7, 1);\n    setActions(value);\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <Paper className={classes.pageContent}>\n        <Form>\n          <Grid container>\n            <Grid item xs={6}>\n              <Controls.Input\n                name=\"departmentName\"\n                label=\"Department Name\"\n                value={values.departmentName}\n                onChange={handleInputChange}\n              />\n              <Controls.Select\n                name=\"programName\"\n                label=\"Program Name\"\n                value={values.programName}\n                onChange={handleInputChange}\n                options={programOptions}\n\n                // error={errors.creditsLecture}\n              />\n            </Grid>\n            <Grid item>\n              <Controls.RadioGroup\n                name=\"semester\"\n                label=\"Semester\"\n                value={values.semester}\n                onChange={handleInputChange}\n                items={semesterItems}\n              />\n              <Controls.Select\n                name=\"courseName\"\n                label=\"Course Name\"\n                value={values.courseName}\n                onChange={handleInputChange}\n                options={dropdownService.courseNameItems()}\n                // error={errors.creditsLecture}\n              />\n              <Controls.Select\n                name=\"courseCode\"\n                label=\"Course Code\"\n                value={values.courseCode}\n                onChange={handleInputChange}\n                options={dropdownService.courseCodeItems()}\n                // error={errors.creditsLecture}\n              />\n            </Grid>\n          </Grid>\n\n          {coordinator.map((coordinator, index1) => (\n            <div key={index1}>\n              <Typography className={classes.typoText}>\n                Coordinator Details\n              </Typography>\n              <TextField\n                variant=\"outlined\"\n                label=\"Coordinator Name\"\n                name=\"coordinatorName\"\n                value={coordinator.coordinatorName}\n                onChange={(event) => handleChangeCoordinator(index1, event)}\n                style={{ width: \"35%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Coordinator Code\"\n                name=\"coordinatorCode\"\n                value={coordinator.coordinatorCode}\n                onChange={(event) => handleChangeCoordinator(index1, event)}\n                style={{ width: \"35%\" }}\n              />\n              <IconButton\n                className={classes.addButton}\n                onClick={() => handleplusCoordinator()}\n              >\n                <AddIcon />\n              </IconButton>\n              <IconButton\n                className={classes.minusButton}\n                onClick={() => handleMinusCoordinator()}\n              >\n                <RemoveIcon />\n              </IconButton>\n            </div>\n          ))}\n          {courseOutcome.map((courseOutcome, index3) => (\n            <div key={index3} className={classes.insideDiv}>\n              <Typography className={classes.typoText}>\n                Course Outcomes\n              </Typography>\n              <TextField\n                variant=\"outlined\"\n                label=\"No\"\n                name=\"CourseOutcomeNum\"\n                value={courseOutcome.courseOutcomeNum}\n                onChange={(event) => handleChangeCourseOutcome(index3, event)}\n                style={{ width: \"10%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Course Outcome Description\"\n                name=\"courseOutcomeDescription\"\n                value={courseOutcome.courseOutcomeDescription}\n                onChange={(event) => handleChangeCourseOutcome(index3, event)}\n                style={{ width: \"35%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Course Outcome Level\"\n                name=\"courseOutcomeLevel\"\n                value={courseOutcome.courseOutcomeLevel}\n                onChange={(event) => handleChangeCourseOutcome(index3, event)}\n                style={{ width: \"35%\" }}\n              />\n              <IconButton\n                className={classes.addButton}\n                onClick={() => handleplusCourseOutcome()}\n              >\n                <AddIcon />\n              </IconButton>\n              <IconButton\n                className={classes.minusButton}\n                onClick={() => handleMinusCourseOutcome()}\n              >\n                <RemoveIcon />\n              </IconButton>\n            </div>\n          ))}\n          {mappingValues.map((mapppingValues, index4) => (\n            <div key={index4} className={classes.insideDiv}>\n              <Typography className={classes.typoText}>\n                CO-PO and CO-PSO Mapping\n              </Typography>\n              <TextField\n                variant=\"outlined\"\n                label=\"co\"\n                name=\"co\"\n                value={mappingValues.co}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"3.5%\" }}\n              />\n              <br></br>\n              <TextField\n                variant=\"outlined\"\n                label=\"po1\"\n                name=\"po1\"\n                value={mappingValues.po1}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"4%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po2\"\n                name=\"po2\"\n                value={mappingValues.po2}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"4%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po3\"\n                name=\"po3\"\n                value={mappingValues.po3}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"4%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po4\"\n                name=\"po4\"\n                value={mappingValues.po4}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"4%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po5\"\n                name=\"po5\"\n                value={mappingValues.po5}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"4%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po6\"\n                name=\"po6\"\n                value={mappingValues.po6}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"4%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po7\"\n                name=\"po7\"\n                value={mappingValues.po7}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"4%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po8\"\n                name=\"po8\"\n                value={mappingValues.po8}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"4%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po9\"\n                name=\"po9\"\n                value={mappingValues.po9}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"4%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po10\"\n                name=\"po10\"\n                value={mappingValues.po10}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"5%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po11\"\n                name=\"po11\"\n                value={mappingValues.po11}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"5%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po12\"\n                name=\"po12\"\n                value={mappingValues.po12}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"5%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"po12\"\n                name=\"po12\"\n                value={mappingValues.po12}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"5%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"pso1\"\n                name=\"pso1\"\n                value={mappingValues.ps01}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"5%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"pso2\"\n                name=\"pso2\"\n                value={mappingValues.ps02}\n                onChange={(event) => handleCo(index4, event)}\n                style={{ width: \"5%\" }}\n              />\n\n              <IconButton\n                className={classes.addButton}\n                onClick={() => handlePlusMapping()}\n              >\n                <AddIcon />\n              </IconButton>\n              <IconButton\n                className={classes.minusButton}\n                onClick={() => handleMinuMapping()}\n              >\n                <RemoveIcon />\n              </IconButton>\n            </div>\n          ))}\n          {gaps.map((gaps, index5) => (\n            <div key={index5} className={classes.insideDiv}>\n              <Typography className={classes.typoText}>\n                Identified Gaps in Syllabus/Course Description(if any)\n              </Typography>\n              <TextField\n                variant=\"outlined\"\n                label=\"Topics to be introduced\"\n                name=\"topicsToBeIntroduced\"\n                value={gaps.topicsToBeIntroduced}\n                onChange={(event) => handleChangeGaps(index5, event)}\n                style={{ width: \"20%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Strengthen CO\"\n                name=\"strengthenCo\"\n                value={gaps.strengthenCo}\n                onChange={(event) => handleChangeGaps(index5, event)}\n                style={{ width: \"20%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Strengthen PO,PSO\"\n                name=\"strengthenPoPso\"\n                value={gaps.strengthenPoPso}\n                onChange={(event) => handleChangeGaps(index5, event)}\n                style={{ width: \"20%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Method Of Indentification\"\n                name=\"methodOfIndentification\"\n                value={gaps.methodOfIdentification}\n                onChange={(event) => handleChangeGaps(index5, event)}\n                style={{ width: \"20%\" }}\n              />\n              <IconButton\n                className={classes.addButton}\n                onClick={() => handleplusGaps()}\n              >\n                <AddIcon />\n              </IconButton>\n              <IconButton\n                className={classes.minusButton}\n                onClick={() => handleMinusGaps()}\n              >\n                <RemoveIcon />\n              </IconButton>\n            </div>\n          ))}\n          {modifications.map((modifications, index6) => (\n            <div key={index6} className={classes.insideDiv}>\n              <Typography className={classes.typoText}>\n                Modifications in Syllabus/ Course Description (If Any):\n              </Typography>\n              <TextField\n                variant=\"outlined\"\n                label=\"Details of Modification (Addition/Removal)\"\n                name=\"detailsOfModifications\"\n                value={modifications.detailsOfModifications}\n                onChange={(event) => handleChangeModifications(index6, event)}\n                style={{ width: \"35%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Justification\"\n                name=\"justifications\"\n                value={modifications.justifications}\n                onChange={(event) => handleChangeModifications(index6, event)}\n                style={{ width: \"15%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Strengthens POs/PSOs\"\n                name=\"strengthensPos\"\n                value={modifications.strengthensPos}\n                onChange={(event) => handleChangeModifications(index6, event)}\n                style={{ width: \"20%\" }}\n              />\n              <IconButton\n                className={classes.addButton}\n                onClick={() => handlePlusModifications(index6)}\n              >\n                <AddIcon />\n              </IconButton>\n              <IconButton\n                className={classes.minusButton}\n                onClick={() => handleMinusModifications(index6)}\n              >\n                <RemoveIcon />\n              </IconButton>\n            </div>\n          ))}\n          {actions.map((actions, index7) => (\n            <div key={index7} className={classes.insideDiv}>\n              <Typography className={classes.typoText}>\n                Actions for Improving CO Attainments:\n              </Typography>\n              <TextField\n                variant=\"outlined\"\n                label=\"COS\"\n                name=\"cos\"\n                value={actions.cos}\n                onChange={(event) => handleChangeActions(index7, event)}\n                style={{ width: \"5%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Attainments in 2021-22\"\n                name=\"attainments\"\n                value={actions.attainments}\n                onChange={(event) => handleChangeActions(index7, event)}\n                style={{ width: \"15%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Strengthens POs/PSOs\"\n                name=\"strengthensPos\"\n                value={modifications.strengthensPos}\n                onChange={(event) => handleChangeActions(index7, event)}\n                style={{ width: \"20%\" }}\n              />\n              <IconButton\n                className={classes.addButton}\n                onClick={() => handlePlusActions(index7)}\n              >\n                <AddIcon />\n              </IconButton>\n              <IconButton\n                className={classes.minusButton}\n                onClick={() => handleMinusActions(index7)}\n              >\n                <RemoveIcon />\n              </IconButton>\n            </div>\n          ))}\n          <Typography className={classes.typoText}>\n            Innovative Teaching and Learning Method To Be Used\n          </Typography>\n          <TextField\n            multiline\n            variant=\"outlined\"\n            label=\"Innovative Teaching and Learning Method to be Used\"\n            name=\"innovativeTeaching\"\n            value={values.innovativeTeaching}\n            onChange={handleInputChange}\n            style={{ width: \"80%\", height: \"70%\" }}\n          />\n          <Typography className={classes.typoText}>Strategies For:</Typography>\n          <Typography className={classes.typoText}>1) Weak Learners</Typography>\n          <TextField\n            multiline\n            variant=\"outlined\"\n            label=\"Weak Learners\"\n            name=\"weakLearners\"\n            value={values.weakLearners}\n            onChange={handleInputChange}\n            style={{ width: \"80%\", height: \"70%\" }}\n          />\n          <Typography className={classes.typoText}>\n            1) Bright Students\n          </Typography>\n          <TextField\n            multiline\n            variant=\"outlined\"\n            label=\"Bright Students\"\n            name=\"brightStudents\"\n            value={values.brightStudents}\n            onChange={handleInputChange}\n            style={{ width: \"80%\", height: \"70%\" }}\n          />\n          <Typography className={classes.typoText}>\n            Innovation Evaluation Strategy To Be Used(If any)\n          </Typography>\n          <TextField\n            multiline\n            variant=\"outlined\"\n            label=\"Innovation Evaluation Strategy To Be Used(If any)\"\n            name=\"evalStrategy\"\n            value={values.evalStrategy}\n            onChange={handleInputChange}\n            style={{ width: \"80%\", height: \"70%\" }}\n          />\n        </Form>\n      </Paper>\n    </div>\n  );\n};\n\nexport default OpeningReport;\n","/Users/garvitanagpal/reportauto/client/src/components/Reports/OpeningReportsStyles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/attainmentReportStyles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/AttainmentReport.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220"],[],"import {\n  Grid,\n  Paper,\n  Container,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport useStyles from \"./attainmentReportStyles\";\nimport { useForm, Form } from \"./useForm\";\nimport Controls from \"../controls/Controls\";\nimport * as dropdownService from \"../../services/dropdownData\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst AttainmentReport = () => {\n  const classes = useStyles();\n  const intialFValues = {\n    innovativeTeaching: \"\",\n    innovationStrategy: \"\",\n  };\n  const { values, setValues, handleInputChange } = useForm(intialFValues);\n  const [attainmentLab, setAttainmentLab] = useState([\n    {\n      coNum: \"\",\n      eval1: \"\",\n      labTest1: \"\",\n      eval28: \"\",\n      eval27: \"\",\n      project: \"\",\n      labtest2: \"\",\n      feedback: \"\",\n    },\n  ]);\n  const [suggestions, setSuggestions] = useState([\n    {\n      sNum: \"\",\n      suggestion: \"\",\n      relevanceToCo: \"\",\n      relevanceToPoPso: \"\",\n    },\n  ]);\n  const handleMinusSuggestions = (index2) => {\n    const value = [...suggestions];\n    value.splice(index2, 1);\n    setSuggestions(value);\n  };\n  const handleChangeSuggestions = (index2, event) => {\n    const values = [...suggestions];\n    values[index2][event.target.name] = event.target.value;\n    setSuggestions(values);\n  };\n  const handlePlusSuggestions = (index2, event) => {\n    setSuggestions([\n      ...suggestions,\n      {\n        sNum: \"\",\n        suggestion: \"\",\n        relevanceToCo: \"\",\n        relevanceToPoPso: \"\",\n      },\n    ]);\n  };\n  const handlePlusAttainmentLab = (index1, event) => {\n    setAttainmentLab([\n      ...attainmentLab,\n      {\n        coNum: \"\",\n        eval1: \"\",\n        labTest1: \"\",\n        eval28: \"\",\n        eval27: \"\",\n        project: \"\",\n        labtest2: \"\",\n        feedback: \"\",\n      },\n    ]);\n  };\n\n  const [mappingValues, setMappingValues] = useState([\n    {\n      co: \"\",\n      po1: \"\",\n      po2: \"\",\n      po3: \"\",\n      po4: \"\",\n      po5: \"\",\n      po6: \"\",\n      po7: \"\",\n      po8: \"\",\n      po9: \"\",\n      po10: \"\",\n      po11: \"\",\n      po12: \"\",\n      pso1: \"\",\n      pso2: \"\",\n    },\n  ]);\n  const handleCo = (index4, event) => {\n    const values = [...mappingValues];\n    values[index4][event.target.name] = event.target.value;\n    setMappingValues(values);\n  };\n  const handlePlusMapping = () => {\n    setMappingValues([\n      ...mappingValues,\n      {\n        co: \"\",\n        po1: \"\",\n        po2: \"\",\n        po3: \"\",\n        po4: \"\",\n        po5: \"\",\n        po6: \"\",\n        po7: \"\",\n        po8: \"\",\n        po9: \"\",\n        po10: \"\",\n        po11: \"\",\n        po12: \"\",\n        pso1: \"\",\n        pso2: \"\",\n      },\n    ]);\n  };\n\n  const handleMinuMapping = (index1) => {\n    const value = [...mappingValues];\n    value.splice(index1, 1);\n    setMappingValues(value);\n  };\n  const handleMinusAttainmentLab = (index1) => {\n    const value = [...attainmentLab];\n    value.splice(index1, 1);\n    setAttainmentLab(value);\n  };\n  const handleChangeAttainmentLab = (index1, event) => {\n    const values = [...attainmentLab];\n    values[index1][event.target.name] = event.target.value;\n    setAttainmentLab(values);\n  };\n  return (\n    <div className={classes.mainContainer}>\n      <Paper className={classes.pageContent}>\n        {attainmentLab.map((attainmentLab, index1) => (\n          <div key={index1} className={classes.insideDiv}>\n            <Typography className={classes.typoText}>\n              Average CO-Attainment\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              label=\"COs\"\n              name=\"coNum\"\n              value={attainmentLab.coNum}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"10%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Eval-1[15]\"\n              name=\"eval1\"\n              value={attainmentLab.eval1}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Lab Test-1[20]\"\n              name=\"labTest1\"\n              value={attainmentLab.labTest1}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Eval-2[8]\"\n              name=\"eval28\"\n              value={attainmentLab.eval28}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Eval-2[7]\"\n              name=\"eval27\"\n              value={attainmentLab.eval27}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Project-[15]\"\n              name=\"project\"\n              value={attainmentLab.project}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"LabTest-2[20]\"\n              name=\"labTest2\"\n              value={attainmentLab.labTest2}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Student Feedback\"\n              name=\"feedback\"\n              value={attainmentLab.feedback}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <IconButton\n              className={classes.addButton}\n              onClick={() => handlePlusAttainmentLab()}\n            >\n              <AddIcon />\n            </IconButton>\n            <IconButton\n              className={classes.minusButton}\n              onClick={() => handleMinusAttainmentLab()}\n            >\n              <RemoveIcon />\n            </IconButton>\n          </div>\n        ))}\n        {mappingValues.map((mapppingValues, index4) => (\n          <div key={index4} className={classes.insideDiv}>\n            <Typography className={classes.typoText}>\n              CO-PO and CO-PSO Mapping\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              label=\"co\"\n              name=\"co\"\n              value={mappingValues.co}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              label=\"po1\"\n              name=\"po1\"\n              value={mappingValues.po1}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po2\"\n              name=\"po2\"\n              value={mappingValues.po2}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po3\"\n              name=\"po3\"\n              value={mappingValues.po3}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po4\"\n              name=\"po4\"\n              value={mappingValues.po4}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po5\"\n              name=\"po5\"\n              value={mappingValues.po5}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po6\"\n              name=\"po6\"\n              value={mappingValues.po6}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po7\"\n              name=\"po7\"\n              value={mappingValues.po7}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po8\"\n              name=\"po8\"\n              value={mappingValues.po8}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po9\"\n              name=\"po9\"\n              value={mappingValues.po9}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po10\"\n              name=\"po10\"\n              value={mappingValues.po10}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po11\"\n              name=\"po11\"\n              value={mappingValues.po11}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po12\"\n              name=\"po12\"\n              value={mappingValues.po12}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po12\"\n              name=\"po12\"\n              value={mappingValues.po12}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"pso1\"\n              name=\"pso1\"\n              value={mappingValues.ps01}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"pso2\"\n              name=\"pso2\"\n              value={mappingValues.ps02}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n\n            <IconButton\n              className={classes.addButton}\n              onClick={() => handlePlusMapping()}\n            >\n              <AddIcon />\n            </IconButton>\n            <IconButton\n              className={classes.minusButton}\n              onClick={() => handleMinuMapping()}\n            >\n              <RemoveIcon />\n            </IconButton>\n          </div>\n        ))}\n        {suggestions.map((suggestions, index2) => (\n          <div key={index2} className={classes.insideDiv}>\n            <Typography className={classes.typoText}>\n              Suggestions for Improvement\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              label=\"sNum\"\n              name=\"sNum\"\n              value={suggestions.sNum}\n              onChange={(event) => handleChangeSuggestions(index2, event)}\n              style={{ width: \"10%\" }}\n              className={classes.mapping}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              label=\"suggestion\"\n              name=\"suggestion\"\n              value={suggestions.suggestion}\n              onChange={(event) => handleChangeSuggestions(index2, event)}\n              style={{ width: \"10%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"relevance To Co\"\n              name=\"relevanceToCo\"\n              value={suggestions.relevanceToCo}\n              onChange={(event) => handleChangeSuggestions(index2, event)}\n              style={{ width: \"20%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"relevance To Po Pso\"\n              name=\"relevanceToPoPso\"\n              value={suggestions.relevanceToPoPso}\n              onChange={(event) => handleChangeSuggestions(index2, event)}\n              style={{ width: \"20%\" }}\n              className={classes.mapping}\n            />\n\n            <IconButton\n              className={classes.addButton}\n              onClick={() => handlePlusMapping()}\n            >\n              <AddIcon />\n            </IconButton>\n            <IconButton\n              className={classes.minusButton}\n              onClick={() => handleMinuMapping()}\n            >\n              <RemoveIcon />\n            </IconButton>\n          </div>\n        ))}\n\n        <Typography className={classes.typoText}>\n          Innovation Evaluation Strategy Used(If any)\n        </Typography>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          label=\"Innovation Evaluation Strategy Used(If any)\"\n          name=\"innovationStrategy\"\n          value={values.innovationStrategy}\n          onChange={handleInputChange}\n          style={{ width: \"80%\" }}\n        />\n        <Typography className={classes.typoText}>\n          Innovative Teaching and Learning Method To Be Used\n        </Typography>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          label=\"Innovative Teaching and Learning Method  Used\"\n          name=\"innovativeTeaching\"\n          value={values.innovativeTeaching}\n          onChange={handleInputChange}\n          style={{ width: \"80%\", height: \"70%\" }}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default AttainmentReport;\n",[],{"ruleId":"221","severity":1,"message":"222","line":3,"column":8,"nodeType":"223","messageId":"224","endLine":3,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":4,"column":25,"nodeType":"223","messageId":"224","endLine":4,"endColumn":31},{"ruleId":"221","severity":1,"message":"226","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":25},{"ruleId":"221","severity":1,"message":"227","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":16},{"ruleId":"221","severity":1,"message":"228","line":3,"column":41,"nodeType":"223","messageId":"224","endLine":3,"endColumn":46},{"ruleId":"221","severity":1,"message":"229","line":10,"column":8,"nodeType":"223","messageId":"224","endLine":10,"endColumn":12},{"ruleId":"221","severity":1,"message":"230","line":14,"column":10,"nodeType":"223","messageId":"224","endLine":14,"endColumn":16},{"ruleId":"221","severity":1,"message":"231","line":14,"column":18,"nodeType":"223","messageId":"224","endLine":14,"endColumn":27},{"ruleId":"232","severity":1,"message":"233","line":37,"column":9,"nodeType":"234","endLine":37,"endColumn":26},{"ruleId":"232","severity":1,"message":"233","line":38,"column":9,"nodeType":"234","endLine":38,"endColumn":26},{"ruleId":"221","severity":1,"message":"235","line":7,"column":8,"nodeType":"223","messageId":"224","endLine":7,"endColumn":12},{"ruleId":"221","severity":1,"message":"236","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":12},{"ruleId":"221","severity":1,"message":"237","line":11,"column":10,"nodeType":"223","messageId":"224","endLine":11,"endColumn":22},{"ruleId":"221","severity":1,"message":"238","line":12,"column":10,"nodeType":"223","messageId":"224","endLine":12,"endColumn":24},{"ruleId":"221","severity":1,"message":"239","line":12,"column":26,"nodeType":"223","messageId":"224","endLine":12,"endColumn":34},{"ruleId":"221","severity":1,"message":"240","line":34,"column":10,"nodeType":"223","messageId":"224","endLine":34,"endColumn":26},{"ruleId":"221","severity":1,"message":"241","line":34,"column":28,"nodeType":"223","messageId":"224","endLine":34,"endColumn":47},{"ruleId":"221","severity":1,"message":"242","line":40,"column":10,"nodeType":"223","messageId":"224","endLine":40,"endColumn":22},{"ruleId":"221","severity":1,"message":"243","line":40,"column":24,"nodeType":"223","messageId":"224","endLine":40,"endColumn":39},{"ruleId":"221","severity":1,"message":"244","line":45,"column":10,"nodeType":"223","messageId":"224","endLine":45,"endColumn":17},{"ruleId":"221","severity":1,"message":"245","line":45,"column":19,"nodeType":"223","messageId":"224","endLine":45,"endColumn":29},{"ruleId":"246","severity":1,"message":"247","line":32,"column":29,"nodeType":"248","messageId":"249","endLine":32,"endColumn":31},{"ruleId":"221","severity":1,"message":"250","line":6,"column":3,"nodeType":"223","messageId":"224","endLine":6,"endColumn":13},{"ruleId":"221","severity":1,"message":"227","line":7,"column":3,"nodeType":"223","messageId":"224","endLine":7,"endColumn":9},{"ruleId":"221","severity":1,"message":"251","line":8,"column":3,"nodeType":"223","messageId":"224","endLine":8,"endColumn":7},{"ruleId":"221","severity":1,"message":"252","line":9,"column":3,"nodeType":"223","messageId":"224","endLine":9,"endColumn":13},{"ruleId":"221","severity":1,"message":"253","line":15,"column":10,"nodeType":"223","messageId":"224","endLine":15,"endColumn":36},{"ruleId":"221","severity":1,"message":"235","line":16,"column":8,"nodeType":"223","messageId":"224","endLine":16,"endColumn":12},{"ruleId":"221","severity":1,"message":"254","line":17,"column":8,"nodeType":"223","messageId":"224","endLine":17,"endColumn":12},{"ruleId":"232","severity":1,"message":"233","line":25,"column":9,"nodeType":"234","endLine":25,"endColumn":62},{"ruleId":"255","severity":1,"message":"256","line":56,"column":5,"nodeType":"257","messageId":"249","endLine":56,"endColumn":15},{"ruleId":"221","severity":1,"message":"258","line":2,"column":20,"nodeType":"223","messageId":"224","endLine":2,"endColumn":29},{"ruleId":"221","severity":1,"message":"259","line":17,"column":8,"nodeType":"223","messageId":"224","endLine":17,"endColumn":13},{"ruleId":"221","severity":1,"message":"260","line":18,"column":8,"nodeType":"223","messageId":"224","endLine":18,"endColumn":17},{"ruleId":"221","severity":1,"message":"261","line":19,"column":8,"nodeType":"223","messageId":"224","endLine":19,"endColumn":17},{"ruleId":"221","severity":1,"message":"262","line":20,"column":8,"nodeType":"223","messageId":"224","endLine":20,"endColumn":22},{"ruleId":"221","severity":1,"message":"263","line":21,"column":8,"nodeType":"223","messageId":"224","endLine":21,"endColumn":17},{"ruleId":"221","severity":1,"message":"264","line":22,"column":8,"nodeType":"223","messageId":"224","endLine":22,"endColumn":16},{"ruleId":"221","severity":1,"message":"265","line":253,"column":9,"nodeType":"223","messageId":"224","endLine":253,"endColumn":27},{"ruleId":"221","severity":1,"message":"266","line":273,"column":9,"nodeType":"223","messageId":"224","endLine":273,"endColumn":17},{"ruleId":"221","severity":1,"message":"267","line":1,"column":8,"nodeType":"223","messageId":"224","endLine":1,"endColumn":13},{"ruleId":"221","severity":1,"message":"268","line":7,"column":3,"nodeType":"223","messageId":"224","endLine":7,"endColumn":17},{"ruleId":"221","severity":1,"message":"269","line":11,"column":31,"nodeType":"223","messageId":"224","endLine":11,"endColumn":36},{"ruleId":"221","severity":1,"message":"267","line":1,"column":8,"nodeType":"223","messageId":"224","endLine":1,"endColumn":13},{"ruleId":"221","severity":1,"message":"270","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"258","line":3,"column":20,"nodeType":"223","messageId":"224","endLine":3,"endColumn":29},{"ruleId":"221","severity":1,"message":"271","line":7,"column":3,"nodeType":"223","messageId":"224","endLine":7,"endColumn":12},{"ruleId":"221","severity":1,"message":"259","line":17,"column":8,"nodeType":"223","messageId":"224","endLine":17,"endColumn":13},{"ruleId":"221","severity":1,"message":"260","line":18,"column":8,"nodeType":"223","messageId":"224","endLine":18,"endColumn":17},{"ruleId":"221","severity":1,"message":"261","line":19,"column":8,"nodeType":"223","messageId":"224","endLine":19,"endColumn":17},{"ruleId":"221","severity":1,"message":"262","line":20,"column":8,"nodeType":"223","messageId":"224","endLine":20,"endColumn":22},{"ruleId":"221","severity":1,"message":"263","line":21,"column":8,"nodeType":"223","messageId":"224","endLine":21,"endColumn":17},{"ruleId":"221","severity":1,"message":"264","line":22,"column":8,"nodeType":"223","messageId":"224","endLine":22,"endColumn":16},{"ruleId":"221","severity":1,"message":"272","line":26,"column":10,"nodeType":"223","messageId":"224","endLine":26,"endColumn":24},{"ruleId":"221","severity":1,"message":"273","line":26,"column":26,"nodeType":"223","messageId":"224","endLine":26,"endColumn":43},{"ruleId":"221","severity":1,"message":"274","line":39,"column":19,"nodeType":"223","messageId":"224","endLine":39,"endColumn":28},{"ruleId":"221","severity":1,"message":"275","line":2,"column":3,"nodeType":"223","messageId":"224","endLine":2,"endColumn":7},{"ruleId":"221","severity":1,"message":"271","line":4,"column":3,"nodeType":"223","messageId":"224","endLine":4,"endColumn":12},{"ruleId":"221","severity":1,"message":"276","line":10,"column":19,"nodeType":"223","messageId":"224","endLine":10,"endColumn":23},{"ruleId":"221","severity":1,"message":"277","line":11,"column":8,"nodeType":"223","messageId":"224","endLine":11,"endColumn":16},{"ruleId":"221","severity":1,"message":"278","line":12,"column":13,"nodeType":"223","messageId":"224","endLine":12,"endColumn":28},{"ruleId":"221","severity":1,"message":"259","line":16,"column":8,"nodeType":"223","messageId":"224","endLine":16,"endColumn":13},{"ruleId":"221","severity":1,"message":"260","line":17,"column":8,"nodeType":"223","messageId":"224","endLine":17,"endColumn":17},{"ruleId":"221","severity":1,"message":"261","line":18,"column":8,"nodeType":"223","messageId":"224","endLine":18,"endColumn":17},{"ruleId":"221","severity":1,"message":"262","line":19,"column":8,"nodeType":"223","messageId":"224","endLine":19,"endColumn":22},{"ruleId":"221","severity":1,"message":"263","line":20,"column":8,"nodeType":"223","messageId":"224","endLine":20,"endColumn":17},{"ruleId":"221","severity":1,"message":"264","line":21,"column":8,"nodeType":"223","messageId":"224","endLine":21,"endColumn":16},{"ruleId":"221","severity":1,"message":"274","line":29,"column":19,"nodeType":"223","messageId":"224","endLine":29,"endColumn":28},{"ruleId":"221","severity":1,"message":"279","line":50,"column":9,"nodeType":"223","messageId":"224","endLine":50,"endColumn":31},{"ruleId":"221","severity":1,"message":"280","line":60,"column":9,"nodeType":"223","messageId":"224","endLine":60,"endColumn":30},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'CourseDescription' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'pic6' is defined but never used.","'course' is assigned a value but never used.","'setCourse' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Auth' is defined but never used.","'Icon' is defined but never used.","'mergeClasses' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'recommendedBooks' is assigned a value but never used.","'setRecommendedBooks' is assigned a value but never used.","'semesterTime' is assigned a value but never used.","'setSemesterTime' is assigned a value but never used.","'session' is assigned a value but never used.","'setSession' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Typography' is defined but never used.","'text' is defined but never used.","'IconButton' is defined but never used.","'MdOutlineKeyboardArrowDown' is defined but never used.","'Home' is defined but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","'useEffect' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'handleInputChange1' is assigned a value but never used.","'getValue' is assigned a value but never used.","'React' is defined but never used.","'FormHelperText' is defined but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'departmentName' is assigned a value but never used.","'setDepartmentName' is assigned a value but never used.","'setValues' is assigned a value but never used.","'Grid' is defined but never used.","'Form' is defined but never used.","'Controls' is defined but never used.","'dropdownService' is defined but never used.","'handleMinusSuggestions' is assigned a value but never used.","'handlePlusSuggestions' is assigned a value but never used."]