[{"/Users/garvitanagpal/reportauto/client/src/index.js":"1","/Users/garvitanagpal/reportauto/client/src/App.js":"2","/Users/garvitanagpal/reportauto/client/src/components/Home.js":"3","/Users/garvitanagpal/reportauto/client/src/components/Navbar.js":"4","/Users/garvitanagpal/reportauto/client/src/components/Auth/Auth.js":"5","/Users/garvitanagpal/reportauto/client/src/components/Reports/CourseDescription.js":"6","/Users/garvitanagpal/reportauto/client/src/components/styles.js":"7","/Users/garvitanagpal/reportauto/client/src/components/Auth/styles.js":"8","/Users/garvitanagpal/reportauto/client/src/components/Auth/icon.js":"9","/Users/garvitanagpal/reportauto/client/src/components/Auth/input.js":"10","/Users/garvitanagpal/reportauto/client/src/components/Reports/styles.js":"11","/Users/garvitanagpal/reportauto/client/src/components/homeStyles.js":"12","/Users/garvitanagpal/reportauto/client/src/components/CustomNavbar/CustomNavbar.js":"13","/Users/garvitanagpal/reportauto/client/src/components/CustomNavbar/customNavStyles.js":"14","/Users/garvitanagpal/reportauto/client/src/components/Reports/CourseDescription1.js":"15","/Users/garvitanagpal/reportauto/client/src/components/Reports/courseDescriptionStyles.js":"16","/Users/garvitanagpal/reportauto/client/src/components/Reports/useForm.js":"17","/Users/garvitanagpal/reportauto/client/src/components/controls/input.js":"18","/Users/garvitanagpal/reportauto/client/src/components/controls/RadioGroup.js":"19","/Users/garvitanagpal/reportauto/client/src/components/controls/Controls.js":"20","/Users/garvitanagpal/reportauto/client/src/components/controls/Select.js":"21","/Users/garvitanagpal/reportauto/client/src/services/dropdownData.js":"22","/Users/garvitanagpal/reportauto/client/src/components/controls/DatePicker.js":"23","/Users/garvitanagpal/reportauto/client/src/components/Reports/OpeningReport.js":"24","/Users/garvitanagpal/reportauto/client/src/components/Reports/OpeningReportsStyles.js":"25","/Users/garvitanagpal/reportauto/client/src/components/Reports/attainmentReportStyles.js":"26","/Users/garvitanagpal/reportauto/client/src/components/Reports/AttainmentReport.js":"27","/Users/garvitanagpal/reportauto/client/src/components/Screens/successScreen.js":"28","/Users/garvitanagpal/reportauto/client/src/components/Reports/successScreenStyles.js":"29"},{"size":168,"mtime":1648257380000,"results":"30","hashOfConfig":"31"},{"size":1730,"mtime":1652365530874,"results":"32","hashOfConfig":"31"},{"size":3464,"mtime":1651391116263,"results":"33","hashOfConfig":"31"},{"size":1814,"mtime":1650635171117,"results":"34","hashOfConfig":"31"},{"size":3827,"mtime":1651409712079,"results":"35","hashOfConfig":"31"},{"size":16193,"mtime":1651787031317,"results":"36","hashOfConfig":"31"},{"size":935,"mtime":1648257380000,"results":"37","hashOfConfig":"31"},{"size":744,"mtime":1651391593976,"results":"38","hashOfConfig":"31"},{"size":502,"mtime":1648257380000,"results":"39","hashOfConfig":"31"},{"size":1070,"mtime":1648257380000,"results":"40","hashOfConfig":"31"},{"size":329,"mtime":1648257380000,"results":"41","hashOfConfig":"31"},{"size":987,"mtime":1651387903479,"results":"42","hashOfConfig":"31"},{"size":2608,"mtime":1652607626117,"results":"43","hashOfConfig":"31"},{"size":1429,"mtime":1651922242593,"results":"44","hashOfConfig":"31"},{"size":26331,"mtime":1652274916582,"results":"45","hashOfConfig":"31"},{"size":860,"mtime":1652000210401,"results":"46","hashOfConfig":"31"},{"size":570,"mtime":1652105499710,"results":"47","hashOfConfig":"31"},{"size":313,"mtime":1651784439225,"results":"48","hashOfConfig":"31"},{"size":643,"mtime":1651760588944,"results":"49","hashOfConfig":"31"},{"size":261,"mtime":1651780712926,"results":"50","hashOfConfig":"31"},{"size":723,"mtime":1652035380182,"results":"51","hashOfConfig":"31"},{"size":4519,"mtime":1652034365203,"results":"52","hashOfConfig":"31"},{"size":743,"mtime":1651781326857,"results":"53","hashOfConfig":"31"},{"size":24425,"mtime":1652279306214,"results":"54","hashOfConfig":"31"},{"size":413,"mtime":1652005782611,"results":"55","hashOfConfig":"31"},{"size":460,"mtime":1651990944086,"results":"56","hashOfConfig":"31"},{"size":17396,"mtime":1652367954256,"results":"57","hashOfConfig":"31"},{"size":514,"mtime":1652274801274,"results":"58","hashOfConfig":"31"},{"size":463,"mtime":1652274766300,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"gcyex8",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"63"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"63"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"63"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"/Users/garvitanagpal/reportauto/client/src/index.js",[],[],[],"/Users/garvitanagpal/reportauto/client/src/App.js",["160","161","162"],[],"/Users/garvitanagpal/reportauto/client/src/components/Home.js",["163","164","165","166","167","168","169","170"],[],"import React, { useState } from \"react\";\nimport CourseDescription from \"./Reports/CourseDescription\";\nimport { Button, Typography, Container, Paper } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport useStyles from \"./homeStyles\";\nimport AliceCarousel from 'react-alice-carousel';\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport pic1 from '../images/pic1.jpg';\nimport pic2 from '../images/pic2.jpg';\nimport pic6 from '../images/pic6.jpg';\n\nconst Home = () => {\n  const classes = useStyles();\n  const [course, setCourse] = useState(false);\n  return (\n    <Container className={classes.headContainer}>\n      <div className={classes.leftContainer}>\n        <Typography className={classes.leftText}>Boost productivity</Typography>\n\n        <Typography className={classes.leftText} >\n          with Jaypee \n        </Typography>\n        <Typography className={classes.leftText} >\n        Automator\n        </Typography>\n        <div className={classes.registerLinkBox}>\n\n        <Link to='auth/' className={classes.registerLink}>\n          Register\n        </Link>\n        </div>\n\n\n      </div>\n      <div className={classes.rightContainer}>\n      <AliceCarousel autoPlay autoPlayInterval='2000' className={classes.slider}>\n        <img src={pic1}/>\n        <img src={pic2}/>\n        \n       \n\n      </AliceCarousel>\n\n      </div>\n\n      \n      {/* <h4>Reports you can edit:</h4>\n        <ol>\n          <li>\n          <div style={{ flexDirection: \"row\" }}>\n            <Button className={classes.reportButton\n            } component={Link} to=\"/CourseDescription\" color=\"#3b5998\">\n              Course Description\n            </Button>\n          </div>\n          </li> */}\n\n      {/* <div style={{ flexDirection: \"row\" }}>\n        <Button component={Link} to=\"/CourseDescription\">\n          {\">>\"} Closing Report\n        </Button>\n      </div>\n      <div style={{ flexDirection: \"row\" }}>\n        <Button component={Link} to=\"/CourseDescription\">\n          {\">>\"} CO-PO-PSO attainment Report\n        </Button>\n      </div>\n      <div style={{ flexDirection: \"row\" }}>\n        <Button component={Link} to=\"/CourseDescription\">\n          {\">>\"} OBE document verification\n        </Button>\n      </div>\n      <div style={{ flexDirection: \"row\" }}>\n        <Button component={Link} to=\"/CourseDescription\">\n          {\">>\"} Opening Report\n        </Button>\n      </div> */}\n      {/* <li>\n      <div className={classes.listContainer}>\n        <Button className={classes.reportButton\n        } component={Link} to=\"/CourseDescription\" color=\"#3b5998\">\n           Opening Report\n        </Button>\n      </div>\n      </li>\n      <li>\n      <div className={classes.listContainer}>\n        <Button className={classes.reportButton\n        } component={Link} to=\"/CourseDescription\" color=\"#3b5998\">\n           Closing Report\n        </Button>\n      </div>\n      </li>\n      <li>\n      <div className={classes.listContainer}>\n        <Button className={classes.reportButton\n        } component={Link} to=\"/CourseDescription\" color=\"#3b5998\">\n           Attainment Report\n        </Button>\n      </div>\n      </li>\n      <li>\n\n      <div className={classes.listContainer}>\n        <Button className={classes.reportButton\n        } component={Link} to=\"/CourseDescription\" color=\"#3b5998\">\n           OBE DOC Verification \n        </Button>\n      </div>\n      </li>\n     \n        </ol> */}\n\n      \n    </Container>\n\n  );\n};\nexport default Home;\n","/Users/garvitanagpal/reportauto/client/src/components/Navbar.js",["171"],[],"import React from \"react\";\nimport { AppBar, Typography, Toolbar, Button, Avatar } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport useStyles from \"./styles\";\nimport automation from \"../images/automation.jpeg\";\nimport Auth from \"./Auth/Auth\";\n\nconst Navbar = () => {\n  const classes = useStyles();\n  const user = null;\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n      <div className={classes.brandContainer}>\n        {/* <Typography\n          component={Link}\n          to=\"/\"\n          className={classes.heading}\n          variant=\"h4\"\n          align=\"center\"\n        >\n          Home\n        </Typography> */}\n        <Button component={Link} to=\"/App\">\n          <img\n            className={classes.image}\n            src={automation}\n            alt=\"icon\"\n            height=\"60\"\n          />\n        </Button>\n      </div>\n      <Toolbar className={classes.toolbar}>\n        {user ? (\n          <div className={classes.profile}>\n            <Avatar\n              className={classes.purple}\n              alt={user.result.name}\n              src={user.result.imageUrl}\n            >\n              {user.result.charAt(0)}\n            </Avatar>\n            <Typography className={classes.userName} variant=\"h6\">\n              {user.result.name}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              className={classes.logout}\n              color=\"secondary\"\n            >\n              Logout\n            </Button>\n          </div>\n        ) : (\n          <Button\n            component={Link}\n            to=\"/auth\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Sign In\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","/Users/garvitanagpal/reportauto/client/src/components/Auth/Auth.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/CourseDescription.js",["172","173","174","175","176","177","178","179","180","181"],[],"import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Paper } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport { mergeClasses } from \"@material-ui/styles\";\nimport { DropdownButton, Dropdown } from \"@material-ui/core\";\nconst CourseDescription = () => {\n  const [inputFeilds, setInputFeilds] = useState([\n    {\n      moduleName: \"\",\n      moduleDescription: \"\",\n      moduleLectures: \"\",\n    },\n  ]);\n  const [coordinator, setCoordinator] = useState([\n    {\n      coordinatorName: \"\",\n      coordinatorCode: \"\",\n    },\n  ]);\n  const [faculty, setFaculty] = useState([\n    {\n      facultyName: \"\",\n      facultyCode: \"\",\n    },\n  ]);\n\n  const [recommendedBooks, setRecommendedBooks] = useState([\n    {\n      bookName: \"\",\n    },\n  ]);\n  const [courseCode, setCourseCode] = useState(\"\");\n  const [semesterTime, setSemesterTime] = useState(\"\");\n  const [semester, setSemester] = useState(\"\");\n  const [branch, setBranch] = useState(\"\");\n  const [monthFrom, setMonthFrom] = useState(\"\");\n  const [monthTo, setMonthTo] = useState(\"\");\n  const [session, setSession] = useState(\"\");\n  const [courseName, setCourseName] = useState(\"\");\n  const [courseCreditLecture, setCourseCreditLecture] = useState(\"\");\n  const [contactHours, setContactHours] = useState(\"\");\n  const [courseCreditTutorial, setCourseCreditTutorial] = useState(\"\");\n  const [courseCreditLab, setCourseCreditLab] = useState(\"\");\n\n  const handleChangeInput = (index, event) => {\n    const values = [...inputFeilds];\n    values[index][event.target.name] = event.target.value;\n    setInputFeilds(values);\n  };\n  const handleChangeFaculty = (index2, event) => {\n    const values = [...faculty];\n    values[index2][event.target.name] = event.target.value;\n    setFaculty(values);\n  };\n  const handleMinusFaculty = (index2) => {\n    const value = [...faculty];\n    value.splice(index2, 1);\n    setFaculty(value);\n  };\n  const handleplusFaculty = () => {\n    setFaculty([\n      ...faculty,\n      {\n        facultyName: \"\",\n        facultyCode: \"\",\n      },\n    ]);\n  };\n\n  const handleChangeCoordinator = (index1, event) => {\n    const values = [...coordinator];\n    values[index1][event.target.name] = event.target.value;\n    setCoordinator(values);\n  };\n  const handleMinusCoordinator = (index1) => {\n    const value = [...coordinator];\n    value.splice(index1, 1);\n    setCoordinator(value);\n  };\n  const handleplusCoordinator = () => {\n    setCoordinator([\n      ...coordinator,\n      {\n        coordinatorName: \"\",\n        coordinatorCode: \"\",\n      },\n    ]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"InputFeilds\", inputFeilds);\n  };\n\n  const handleplus = () => {\n    setInputFeilds([\n      ...inputFeilds,\n      {\n        moduleName: \"\",\n        moduleDescription: \"\",\n        moduleLectures: \"\",\n      },\n    ]);\n  };\n  const handleMinus = (index) => {\n    const value = [...inputFeilds];\n    value.splice(index, 1);\n    setInputFeilds(value);\n  };\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          <h1 style={{ alignContent: \"center\", alignItems: \"center\" }}>\n            Course Description\n          </h1>\n          <label>\n            Course Name:\n            <select\n              value={courseName}\n              onChange={(event) => {\n                setCourseName(event.target.value);\n                setCourseCode(\n                  event.target.value ===\n                    \"Fundamentals of Distributed and Cloud Computing\"\n                    ? \"MA324\"\n                    : event.target.value ===\n                      \"Computer Networks and internet of things\"\n                    ? \"PK789\"\n                    : event.target.value === \"Applied Mathematics\"\n                    ? \"IKA899\"\n                    : \"GH763\"\n                );\n              }}\n            >\n              <option selected value=\"null\">\n                Select\n              </option>\n              <option value=\"Fundamentals of Distributed and Cloud Computing\">\n                Fundamentals of Distributed and Cloud Computing\n              </option>\n              <option value=\"Computer Networks and internet of things\">\n                Computer Networks and internet of things\n              </option>\n              <option value=\"Applied Mathematics\">Applied Mathematics</option>\n              <option value=\"Web Technology and Cyber Security\">\n                Web Technology and Cyber Security\n              </option>\n            </select>\n          </label>\n          {/* <TextField\n            name=\"CourseName\"\n            label=\"Course Name\"\n            value={courseName}\n            onChange={(event) => setCourseName(event.target.value)}\n          /> */}\n          <div style={{ height: 20 }}></div>\n          <label>\n            Course Code:\n            <TextField\n              name=\"CourseCode\"\n              value={courseCode}\n              onChange={(event) => setCourseCode(event.target.value)}\n            />\n          </label>\n          <div style={{ height: 20 }}></div>\n          <label>\n            Semester Type:\n            <select\n              value={semester}\n              onChange={(event) => setSemester(event.target.value)}\n            >\n              <option selected value=\"null\">\n                Select\n              </option>\n              <option value=\"odd\">Odd</option>\n              <option value=\"even\">Even</option>\n            </select>\n          </label>\n          <div style={{ height: 20 }}></div>\n          <label>\n            Branch:\n            <select\n              value={branch}\n              onChange={(event) => setBranch(event.target.value)}\n            >\n              <option selected value=\"null\">\n                Select\n              </option>\n              <option value=\"CSE\">CSE</option>\n              <option value=\"ECE\">ECE</option>\n\n              <option value=\"BioTech\">BioTech</option>\n            </select>\n          </label>\n          <div style={{ height: 20 }}></div>\n          <label>\n            Month From:\n            <select\n              value={monthFrom}\n              onChange={(event) => setMonthFrom(event.target.value)}\n            >\n              <option selected value=\"null\">\n                Select\n              </option>\n              <option value=\"Jan\">January</option>\n              <option value=\"Feb\">February</option>\n\n              <option value=\"Mar\">March</option>\n              <option value=\"Apr\">April</option>\n              <option value=\"May\">May</option>\n              <option value=\"June\">June</option>\n              <option value=\"July\">July</option>\n              <option value=\"August\">August</option>\n              <option value=\"Sept\">September</option>\n              <option value=\"Oct\">October</option>\n              <option value=\"Nov\">November</option>\n              <option value=\"Dec\">December</option>\n            </select>\n          </label>\n          <label>\n            Month To:\n            <select\n              value={monthTo}\n              onChange={(event) => setMonthTo(event.target.value)}\n            >\n              <option selected value=\"null\">\n                Select\n              </option>\n              <option value=\"Jan\">January</option>\n              <option value=\"Feb\">February</option>\n\n              <option value=\"Mar\">March</option>\n              <option value=\"Apr\">April</option>\n              <option value=\"May\">May</option>\n              <option value=\"June\">June</option>\n              <option value=\"July\">July</option>\n              <option value=\"August\">August</option>\n              <option value=\"Sept\">September</option>\n              <option value=\"Oct\">October</option>\n              <option value=\"Nov\">November</option>\n              <option value=\"Dec\">December</option>\n            </select>\n          </label>\n          <div style={{ height: 20 }}></div>\n          <label>Course Credits(L:T:P):</label>\n          <label>\n            <select\n              value={courseCreditLecture}\n              onChange={(event) => setCourseCreditLecture(event.target.value)}\n            >\n              <option selected value=\"null\">\n                L\n              </option>\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n          </label>\n          <label>\n            <select\n              value={courseCreditTutorial}\n              onChange={(event) => setCourseCreditTutorial(event.target.value)}\n            >\n              <option selected value=\"null\">\n                T\n              </option>\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n          </label>\n          <label>\n            <select\n              value={courseCreditLab}\n              onChange={(event) => setCourseCreditLab(event.target.value)}\n            >\n              <option selected value=\"null\">\n                P\n              </option>\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n          </label>\n          <label>\n            Contact Hours:\n            <select\n              value={contactHours}\n              onChange={(event) => setContactHours(event.target.value)}\n            >\n              <option selected value=\"null\">\n                select\n              </option>\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n          </label>\n\n          <div style={{ height: 20 }}></div>\n\n          <div style={{ height: 20 }}></div>\n\n          <div style={{ height: 20 }}></div>\n          {/* <TextField\n            id=\"outlined-multiline-static\"\n            label=\"Multiline\"\n            multiline\n            rows={10}\n            variant=\"outlined\"\n            maxRows={Infinity}\n          />\n          <h2>Enter Evaluation Criteria</h2> */}\n          <h3>Enter coordinator details:</h3>\n\n          {coordinator.map((coordinator, index1) => (\n            <label>\n              <div\n                key={index1}\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-evenly\",\n                  left: 0,\n                  margin: 20,\n                }}\n              >\n                <TextField\n                  name=\"coordinatorName\"\n                  label=\"Coordinator Name\"\n                  variant=\"filled\"\n                  value={coordinator.coordinatorName}\n                  onChange={(event) => handleChangeCoordinator(index1, event)}\n                />\n\n                <TextField\n                  name=\"coordinatorCode\"\n                  label=\"Coordinator Code\"\n                  variant=\"filled\"\n                  value={coordinator.coordinatorCode}\n                  onChange={(event) => handleChangeCoordinator(index1, event)}\n                />\n                <IconButton onClick={() => handleMinusCoordinator(index1)}>\n                  <RemoveIcon />\n                </IconButton>\n                <IconButton onClick={() => handleplusCoordinator()}>\n                  <AddIcon />\n                </IconButton>\n              </div>\n            </label>\n          ))}\n          <h3>Enter faculty details:</h3>\n\n          {faculty.map((faculty, index2) => (\n            <label>\n              <div\n                key={index2}\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-evenly\",\n                  left: 0,\n                  margin: 20,\n                }}\n              >\n                <TextField\n                  name=\"facultyName\"\n                  label=\"Faculty Name\"\n                  variant=\"filled\"\n                  value={faculty.facultyName}\n                  onChange={(event) => handleChangeFaculty(index2, event)}\n                />\n\n                <TextField\n                  name=\"facultyCode\"\n                  label=\"Faculty Code\"\n                  variant=\"filled\"\n                  value={faculty.facultyCode}\n                  onChange={(event) => handleChangeFaculty(index2, event)}\n                />\n                <IconButton onClick={() => handleMinusFaculty(index2)}>\n                  <RemoveIcon />\n                </IconButton>\n                <IconButton onClick={() => handleplusFaculty()}>\n                  <AddIcon />\n                </IconButton>\n              </div>\n            </label>\n          ))}\n\n          {/* <form onSubmit={handleSubmit}> */}\n          <h3>Enter module details:</h3>\n          {inputFeilds.map((inputFeilds, index) => (\n            <label>\n              <div\n                key={index}\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-evenly\",\n                  left: 0,\n                  margin: 20,\n                }}\n              >\n                <TextField\n                  name=\"moduleName\"\n                  label=\"Module Name\"\n                  variant=\"filled\"\n                  value={inputFeilds.moduleName}\n                  onChange={(event) => handleChangeInput(index, event)}\n                />\n\n                <TextField\n                  name=\"moduleDescription\"\n                  label=\"Topics in the Module\"\n                  variant=\"filled\"\n                  value={inputFeilds.moduleDescription}\n                  onChange={(event) => handleChangeInput(index, event)}\n                />\n                <TextField\n                  name=\"moduleLectures\"\n                  label=\"Lectures in the module\"\n                  variant=\"filled\"\n                  value={inputFeilds.moduleLectures}\n                  onChange={(event) => handleChangeInput(index, event)}\n                />\n                <IconButton onClick={() => handleMinus(index)}>\n                  <RemoveIcon />\n                </IconButton>\n                <IconButton onClick={() => handleplus()}>\n                  <AddIcon />\n                </IconButton>\n              </div>\n            </label>\n          ))}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={handleSubmit}\n            style={{ margin: 20 }}\n          >\n            Send\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default CourseDescription;\n","/Users/garvitanagpal/reportauto/client/src/components/styles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Auth/styles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Auth/icon.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Auth/input.js",["182"],[],"import React from \"react\";\nimport { TextField, IconButton, Grid, InputAdornment } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nconst input = ({\n  name,\n  handleChange,\n  autoFocus,\n  type,\n  handleShowPassword,\n  half,\n  label,\n}) => {\n  return (\n    <Grid item xs={12} sm={half ? 6 : 12}>\n      <TextField\n        name={name}\n        onChange={handleChange}\n        variant=\"outlined\"\n        required\n        fullWidth\n        label={label}\n        autofocus={autoFocus}\n        type={type}\n        InputProps={\n          name === \"password\"\n            ? {\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton onClick={handleShowPassword}>\n                      {type == \"password\" ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }\n            : null\n        }\n      />\n    </Grid>\n  );\n};\n\nexport default input;\n","/Users/garvitanagpal/reportauto/client/src/components/Reports/styles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/homeStyles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/CustomNavbar/CustomNavbar.js",["183","184","185","186","187","188","189","190","191","192"],[],"/Users/garvitanagpal/reportauto/client/src/components/CustomNavbar/customNavStyles.js",["193"],[],"import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  automationLink: {\n    textDecoration: \"none\",\n    fontFamily: \"Raleway\",\n    color: \"#191919\",\n    fontSize: 15,\n    padding: 5,\n    marginLeft: 20,\n  },\n  signinLink: {\n    textDecoration: \"none\",\n    fontFamily: \"Raleway\",\n    color: \"#191919\",\n    fontSize: 15,\n    padding: 5,\n    marginLeft: 20,\n    borderStyle: \"solid\",\n    borderLeftWidth: 0.25,\n    borderRightWidth: 0.25,\n    borderTopWidth: 0.25,\n    borderBottomWidth: 0.25,\n  },\n  arrowLogo: {\n    paddingLeft: 7,\n  },\n  buttonLogo: {\n    height: 20,\n    width: 1,\n    marginLeft: -20,\n  },\n  jiitlogo: {\n    flex: \"row\",\n    height: 80,\n    width: 70,\n    marginLeft: -100,\n  },\n  //   mainCustomNavbar: {\n  //     widht: \"100%\",\n  //   },\n\n  //   mainDiv: {\n  //     backgroundColor: \"#8083c9\",\n  //   },\n  navbarButtons: {\n    padding: 0,\n  },\n  navbarContainer: {\n    flexDirection: \"column\",\n  },\n  navbarsecond: {\n    flexDirection: \"row\",\n    marginLeft: -135,\n    marginTop: -20,\n    marginLeft: -130,\n    // backgroundColor: \"#8083c9\",\n  },\n  navbarText: {\n    color: \"#191919\",\n    fontSize: 15,\n    fontFamily: \"Raleway\",\n    padding: 30,\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    // backgroundColor: \"#8083c9\",\n  },\n  topSubContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    fontSize: 15,\n    fontFamily: \"Raleway\",\n  },\n}));\n","/Users/garvitanagpal/reportauto/client/src/components/Reports/CourseDescription1.js",["194","195","196","197","198","199","200","201","202"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Container,\n  TextField,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport useStyles from \"./courseDescriptionStyles\";\nimport { useForm, Form } from \"./useForm\";\nimport Controls from \"../controls/Controls\";\nimport * as dropdownService from \"../../services/dropdownData\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst CourseDescription1 = () => {\n  let navigate = useNavigate();\n\n  function handleSubmit() {\n    console.log(\"clicked\");\n    let bucket = [\"123456\", \"123457\", \"123458\"];\n    var obj = {\n      course_code: bucket[values.courseCode],\n      course_name: values.courseName,\n      course_credits:\n        values.creditsLab + values.creditsLecture + values.creditsTutorial,\n      contact_hours: values.contactHours,\n      Branch: values.branch,\n      semester: values.semester,\n      Module_table: inputFeilds,\n      course_outcome: courseOutcome,\n      faculty_table: faculty,\n      text_Book_table: books,\n    };\n    console.log(obj);\n    axios\n      .post(\"http://localhost:5000/api/enterCourseDescription/\", obj)\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        navigate(\"successScreen\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  var courses_dict = {\n    123456: {\n      course_code: \"123456\",\n      course_name: \"software eng.\",\n      course_credits: \"4\",\n      contact_hours: \"4\",\n      Branch: \"CSE/IT\",\n      course_outcome: [\n        { index: \"1\", Description: \"its a co1\", cognitive_level: \"co1\" },\n        { index: \"2\", Description: \"its a co2\", cognitive_level: \"co2\" },\n        { index: \"3\", Description: \"its a co3\", cognitive_level: \"co3\" },\n        { index: \"4\", Description: \"its a co4\", cognitive_level: \"co4\" },\n      ],\n      faculty_table: [\n        {\n          faculty_name: \"bhawna\",\n          faculty_subject: \"software eng.\",\n          faculty_id: \"123\",\n          department: \"CSE/IT\",\n        },\n        {\n          faculty_name: \"amit\",\n          faculty_subject: \"software eng.\",\n          faculty_id: \"124\",\n          department: \"CSE/IT\",\n        },\n        {\n          faculty_name: \"seema\",\n          faculty_subject: \"software developement\",\n          faculty_id: \"125\",\n          department: \"CSE/IT\",\n        },\n        {\n          faculty_name: \"aneeta\",\n          faculty_subject: \"software fundamentals\",\n          faculty_id: \"126\",\n          department: \"CSE/IT\",\n        },\n        {\n          faculty_name: \"gautam\",\n          faculty_subject: \"software developemnt\",\n          faculty_id: \"127\",\n          department: \"CSE/IT\",\n        },\n      ],\n    },\n\n    123457: {\n      course_code: \"123457\",\n      course_name: \"cn/iot\",\n      course_credits: \"4\",\n      contact_hours: \"4\",\n      Branch: \"CSE/IT\",\n      course_outcome: [\n        { index: \"1\", Description: \"its a co1\", cognitive_level: \"co1\" },\n        { index: \"2\", Description: \"its a co2\", cognitive_level: \"co2\" },\n        { index: \"3\", Description: \"its a co3\", cognitive_level: \"co3\" },\n        { index: \"4\", Description: \"its a co4\", cognitive_level: \"co4\" },\n      ],\n      faculty_table: [\n        {\n          faculty_name: \"bhawna\",\n          faculty_subject: \"software eng.\",\n          faculty_id: \"123\",\n          department: \"CSE/IT\",\n        },\n        {\n          faculty_name: \"amit\",\n          faculty_subject: \"software eng.\",\n          faculty_id: \"124\",\n          department: \"CSE/IT\",\n        },\n        {\n          faculty_name: \"seema\",\n          faculty_subject: \"software developement\",\n          faculty_id: \"125\",\n          department: \"CSE/IT\",\n        },\n        {\n          faculty_name: \"aneeta\",\n          faculty_subject: \"software fundamentals\",\n          faculty_id: \"126\",\n          department: \"CSE/IT\",\n        },\n        {\n          faculty_name: \"gautam\",\n          faculty_subject: \"software developemnt\",\n          faculty_id: \"127\",\n          department: \"CSE/IT\",\n        },\n      ],\n    },\n    123458: {\n      course_code: \"123458\",\n      course_name: \"VLSI\",\n      course_credits: \"4\",\n      contact_hours: \"4\",\n      Branch: \"ECE\",\n      course_outcome: [\n        { index: \"1\", Description: \"its a co1\", cognitive_level: \"co1\" },\n        { index: \"2\", Description: \"its a co2\", cognitive_level: \"co2\" },\n        { index: \"3\", Description: \"its a co3\", cognitive_level: \"co3\" },\n        { index: \"4\", Description: \"its a co4\", cognitive_level: \"co4\" },\n      ],\n      faculty_table: [\n        {\n          faculty_name: \"bhawna\",\n          faculty_subject: \"Electrical\",\n          faculty_id: \"128\",\n          department: \"ECE\",\n        },\n        {\n          faculty_name: \"amit\",\n          faculty_subject: \"Electrical\",\n          faculty_id: \"124\",\n          department: \"ECE\",\n        },\n        {\n          faculty_name: \"seema\",\n          faculty_subject: \"Electrical\",\n          faculty_id: \"125\",\n          department: \"ECE\",\n        },\n        {\n          faculty_name: \"aneeta\",\n          faculty_subject: \"Electrical\",\n          faculty_id: \"126\",\n          department: \"ECE\",\n        },\n        {\n          faculty_name: \"gautam\",\n          faculty_subject: \"Electrical\",\n          faculty_id: \"127\",\n          department: \"ECE\",\n        },\n      ],\n    },\n  };\n\n  // const handleInputCode = () => {\n\n  //     values.\n\n  // }\n\n  const classes = useStyles();\n  const intialFValues = {\n    courseName: \"\",\n    courseCode: \"\",\n    semester: \"\",\n    branch: \"\",\n    dateFrom: new Date(),\n    dateTo: new Date(),\n    creditsLecture: \"\",\n    creditsTutorial: \"\",\n    creditsLab: \"\",\n    contactHours: \"\",\n\n    teacherNames: [],\n    modules: [],\n    eval: \"\",\n    books: [],\n  };\n  const [inputFeilds, setInputFeilds] = useState([\n    {\n      module_no: \"\",\n      title: \"\",\n      topic: \"\",\n      no_of_lectures: \"\",\n    },\n  ]);\n  const [coordinator, setCoordinator] = useState([\n    {\n      coordinatorName: \"\",\n      coordinatorCode: \"\",\n    },\n  ]);\n  const [ta, setTa] = useState([\n    {\n      Attendence: \"\",\n      Assignments: \"\",\n      Quiz: \"\",\n      PBL: \"\",\n      Tutorials: \"\",\n    },\n  ]);\n  const [books, setBooks] = useState([\n    {\n      Name: \"\",\n      Author: \"\",\n    },\n  ]);\n  const handleChangeTa = (index4, event) => {\n    const values = [...ta];\n    values[index4][event.target.name] = event.target.value;\n    setTa(values);\n  };\n  const handlePlusBooks = (index5, event) => {\n    setBooks([\n      ...books,\n      {\n        name: \"\",\n        author: \"\",\n      },\n    ]);\n  };\n  const handleMinusBooks = (index5) => {\n    const value = [...books];\n    value.splice(index5, 1);\n    setBooks(value);\n  };\n  const handleChangeBooks = (index5, event) => {\n    const values = [...books];\n    values[index5][event.target.name] = event.target.value;\n    setBooks(values);\n  };\n  const handleMinusCoordinator = (index1) => {\n    const value = [...coordinator];\n    value.splice(index1, 1);\n    setCoordinator(value);\n  };\n  const handleplusCoordinator = () => {\n    setCoordinator([\n      ...coordinator,\n      {\n        coordinatorName: \"\",\n        coordinatorCode: \"\",\n      },\n    ]);\n  };\n  const handleChangeCoordinator = (index1, event) => {\n    const values = [...coordinator];\n    values[index1][event.target.name] = event.target.value;\n    setCoordinator(values);\n  };\n\n  const handleInputChange1 = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n  const [faculty, setFaculty] = useState([\n    {\n      faculty_name: \"\",\n      faculty_id: \"\",\n    },\n  ]);\n  const [courseOutcome, setCourseOutcome] = useState([\n    {\n      index: \"\",\n      Description: \"\",\n      cognitive_level: \"\",\n    },\n  ]);\n  const getValue = () => {\n    var need = values.courseCode;\n    return courses_dict[need].course_name;\n  };\n  const handleplusCourseOutcome = (index3, event) => {\n    setCourseOutcome([\n      ...courseOutcome,\n      {\n        index: \"\",\n        Description: \"\",\n        cognitive_level: \"\",\n      },\n    ]);\n  };\n  const handleMinusCourseOutcome = (index3) => {\n    const value = [...courseOutcome];\n    value.splice(index3, 1);\n    setCourseOutcome(value);\n  };\n  const handleChangeCourseOutcome = (index3, event) => {\n    const values = [...courseOutcome];\n    values[index3][event.target.name] = event.target.value;\n    setCourseOutcome(values);\n  };\n  const handleChangeInput = (index, event) => {\n    const values = [...inputFeilds];\n    values[index][event.target.name] = event.target.value;\n    setInputFeilds(values);\n  };\n  const handleChangeFaculty = (index2, event) => {\n    const values = [...faculty];\n    values[index2][event.target.name] = event.target.value;\n    setFaculty(values);\n  };\n  const handleMinusFaculty = (index2) => {\n    const value = [...faculty];\n    value.splice(index2, 1);\n    setFaculty(value);\n  };\n  const handleplusFaculty = () => {\n    setFaculty([\n      ...faculty,\n      {\n        faculty_name: \"\",\n        faculty_id: \"\",\n      },\n    ]);\n  };\n  const handleplus = () => {\n    setInputFeilds([\n      ...inputFeilds,\n      {\n        module_no: \"\",\n        title: \"\",\n        topic: \"\",\n      },\n    ]);\n  };\n  const handleMinus = (index) => {\n    const value = [...inputFeilds];\n    value.splice(index, 1);\n    setInputFeilds(value);\n  };\n  const { values, setValues, handleInputChange } = useForm(intialFValues);\n  const semesterItems = [\n    { id: \"Odd\", title: \"Odd\" },\n    { id: \"Even\", title: \"Even\" },\n  ];\n  const branchItems = [\n    { id: \"Cse\", title: \"Cse\" },\n    { id: \"Ece\", title: \"Ece\" },\n    { id: \"Biotech\", title: \"Biotech\" },\n  ];\n\n  const lectureCreditItems = [\n    { id: 0, title: 0 },\n    { id: 1, title: 1 },\n    { id: 2, title: 2 },\n    { id: 3, title: 3 },\n    { id: 4, title: 4 },\n    { id: 5, title: 5 },\n    { id: 6, title: 6 },\n    { id: 7, title: 7 },\n    { id: 8, title: 8 },\n    { id: 9, title: 9 },\n  ];\n\n  return (\n    <Container className={classes.mainLayout}>\n      <Paper className={classes.pageContent}>\n        <Typography className={classes.headerText} align=\"center\">\n          Course Description Form\n        </Typography>\n        <Typography className={classes.normalText} align=\"left\">\n          Fill in the details carefully:\n        </Typography>\n\n        <Form>\n          <Grid container>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                label=\"Course Name\"\n                name=\"courseName\"\n                value={values.courseName}\n                onChange={handleInputChange}\n                style={{ width: \"35%\" }}\n              />\n\n              <Controls.Select\n                name=\"courseCode\"\n                label=\"Course Code\"\n                value={values.courseCode}\n                onChange={handleInputChange}\n                options={dropdownService.courseCodeItems()}\n                // error={errors.creditsLecture}\n              />\n              {/* <Controls.Input\n                name=\"courseName\"\n                label=\"Course Name\"\n                value={values.courseName}\n                onChange={handleInputChange}\n              /> */}\n              {/* <Controls.Input\n                name=\"courseCode\"\n                label=\"Course Code\"\n                value={values.courseCode}\n                onChange={handleInputChange}\n              /> */}\n              <Controls.Select\n                name=\"creditsLecture\"\n                label=\"Credits Lecture\"\n                value={values.creditsLecture}\n                onChange={handleInputChange}\n                options={lectureCreditItems}\n\n                // error={errors.creditsLecture}\n              />\n              <Controls.Select\n                name=\"creditsTutorial\"\n                label=\"Credits Tutorial\"\n                value={values.creditsTutorial}\n                onChange={handleInputChange}\n                options={lectureCreditItems}\n\n                // error={errors.creditsLecture}\n              />\n              <Controls.Select\n                name=\"creditsLab\"\n                label=\"Credits Lab\"\n                value={values.creditsLab}\n                onChange={handleInputChange}\n                options={lectureCreditItems}\n\n                // error={errors.creditsLecture}\n              />\n              <Controls.Select\n                name=\"contactHours\"\n                label=\"Contact Hours\"\n                value={values.contactHours}\n                onChange={handleInputChange}\n                options={lectureCreditItems}\n\n                // error={errors.creditsLecture}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Controls.RadioGroup\n                name=\"semester\"\n                label=\"Semester\"\n                value={values.semester}\n                onChange={handleInputChange}\n                items={semesterItems}\n              />\n              <Controls.RadioGroup\n                name=\"branch\"\n                label=\"Branch\"\n                value={values.branch}\n                onChange={handleInputChange}\n                items={branchItems}\n              />\n              <Controls.DatePicker\n                name=\"dateFrom\"\n                label=\"Date From\"\n                value={values.dateFrom}\n                onChange={handleInputChange}\n              />\n              <Controls.DatePicker\n                name=\"dateTo\"\n                label=\"Date To\"\n                value={values.dateTo}\n                onChange={handleInputChange}\n              />\n\n              {/* <Controls.Input\n                name=\"coordinatorName\"\n                label=\"Coordinator Name\"\n                value={values.coordinatorName}\n                onChange={handleInputChange}\n              />\n              <Controls.Input\n                name=\"coordinatorCode\"\n                label=\"Coordinator Code\"\n                value={values.courseName}\n                onChange={handleInputChange}\n              /> */}\n            </Grid>\n          </Grid>\n          <hr></hr>\n          <Grid container>\n            <div className={classes.div1}>\n              <div>\n                <Typography className={classes.captionsText}>\n                  Coordinator Details\n                </Typography>\n              </div>\n              {coordinator.map((coordinator, index1) => (\n                <div key={index1} className={classes.insideDiv}>\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Coordinator Name\"\n                    name=\"coordinatorName\"\n                    value={coordinator.coordinatorName}\n                    onChange={(event) => handleChangeCoordinator(index1, event)}\n                    style={{ width: \"35%\" }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Coordinator Code\"\n                    name=\"coordinatorCode\"\n                    value={coordinator.coordinatorCode}\n                    onChange={(event) => handleChangeCoordinator(index1, event)}\n                    style={{ width: \"35%\" }}\n                  />\n                  <IconButton\n                    className={classes.addButton}\n                    onClick={() => handleplusCoordinator()}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                  <IconButton\n                    className={classes.minusButton}\n                    onClick={() => handleMinusCoordinator()}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n              ))}\n            </div>\n\n            <div className={classes.div1}>\n              <div>\n                <Typography className={classes.captionsText}>\n                  Faculty Details\n                </Typography>\n              </div>\n              {faculty.map((faculty, index2) => (\n                <div key={index2} className={classes.insideDiv}>\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Faculty Name\"\n                    name=\"faculty_name\"\n                    value={faculty.faculty_name}\n                    onChange={(event) => handleChangeFaculty(index2, event)}\n                    style={{ width: \"35%\" }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Faculty Code\"\n                    name=\"faculty_id\"\n                    value={faculty.faculty_id}\n                    onChange={(event) => handleChangeFaculty(index2, event)}\n                    style={{ width: \"35%\" }}\n                  />\n                  <IconButton\n                    className={classes.addButton}\n                    onClick={() => handleplusFaculty()}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                  <IconButton\n                    className={classes.minusButton}\n                    onClick={() => handleMinusFaculty()}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n              ))}\n            </div>\n\n            <div className={classes.div1}>\n              <div>\n                <Typography className={classes.captionsText}>\n                  Modules Details\n                </Typography>\n              </div>\n              {inputFeilds.map((inputFeilds, index) => (\n                <div key={index} className={classes.insideDiv}>\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Module Name\"\n                    name=\"module_no\"\n                    value={inputFeilds.module_no}\n                    onChange={(event) => handleChangeInput(index, event)}\n                    style={{ width: \"25%\" }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Topics \"\n                    name=\"title\"\n                    value={inputFeilds.title}\n                    onChange={(event) => handleChangeInput(index, event)}\n                    style={{ width: \"20%\" }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Lectures \"\n                    name=\"topic\"\n                    value={inputFeilds.topic}\n                    onChange={(event) => handleChangeInput(index, event)}\n                    style={{ width: \"20%\" }}\n                  />\n                  <IconButton\n                    className={classes.addButton}\n                    onClick={() => handleplus()}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                  <IconButton\n                    className={classes.minusButton}\n                    onClick={() => handleMinus(index)}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n              ))}\n            </div>\n\n            <div className={classes.div1}>\n              <div>\n                <Typography className={classes.captionsText}>\n                  Course Outcomes\n                </Typography>\n              </div>\n              {courseOutcome.map((courseOutcome, index3) => (\n                <div key={index3} className={classes.insideDiv}>\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"No\"\n                    name=\"index\"\n                    value={courseOutcome.index}\n                    onChange={(event) =>\n                      handleChangeCourseOutcome(index3, event)\n                    }\n                    style={{ width: \"10%\" }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Course Outcome Description\"\n                    name=\"Description\"\n                    value={courseOutcome.Description}\n                    onChange={(event) =>\n                      handleChangeCourseOutcome(index3, event)\n                    }\n                    style={{ width: \"35%\" }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Course Outcome Level\"\n                    name=\"cognitive_level\"\n                    value={courseOutcome.cognitive_level}\n                    onChange={(event) =>\n                      handleChangeCourseOutcome(index3, event)\n                    }\n                    style={{ width: \"35%\" }}\n                  />\n                  <IconButton\n                    className={classes.addButton}\n                    onClick={() => handleplusCourseOutcome()}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                  <IconButton\n                    className={classes.minusButton}\n                    onClick={() => handleMinusCourseOutcome()}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n              ))}\n            </div>\n          </Grid>\n          {/* <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Attendence</TableCell>\n                  <TableCell align=\"right\">Assignments</TableCell>\n                  <TableCell align=\"right\">Quiz</TableCell>\n                  <TableCell align=\"right\">PBL</TableCell>\n                  <TableCell align=\"right\">Tutorials</TableCell>\n                </TableRow>\n              </TableHead> */}\n          {/* <TableBody>\n                <TableRow>\n                  <TableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"No\"\n                      name=\"index\"\n                      value={courseOutcome.index}\n                      onChange={(event) =>\n                        handleChangeCourseOutcome(index3, event)\n                      }\n                      style={{ width: \"10%\" }}\n                    ></TextField>\n                  </TableCell>\n                </TableRow>\n              </TableBody> */}\n          {/* </Table>\n          </TableContainer> */}\n          {ta.map((ta, index4) => (\n            <div key={index4} className={classes.insideDiv}>\n              <Typography className={classes.captionsText}>\n                Teacher's Assesment\n              </Typography>\n              <TextField\n                variant=\"outlined\"\n                label=\"Attendence\"\n                name=\"attendence\"\n                value={ta.attendence}\n                onChange={(event) => handleChangeTa(index4, event)}\n                style={{ width: \"15%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Assignments\"\n                name=\"assignments\"\n                value={ta.assignments}\n                onChange={(event) => handleChangeTa(index4, event)}\n                style={{ width: \"15%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Quiz\"\n                name=\"quiz\"\n                value={ta.quiz}\n                onChange={(event) => handleChangeTa(index4, event)}\n                style={{ width: \"15%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"PBL\"\n                name=\"pbl\"\n                value={ta.pbl}\n                onChange={(event) => handleChangeTa(index4, event)}\n                style={{ width: \"15%\" }}\n              />\n              <TextField\n                variant=\"outlined\"\n                label=\"Tutorial\"\n                name=\"tutorial\"\n                value={ta.tutorial}\n                onChange={(event) => handleChangeTa(index4, event)}\n                style={{ width: \"15%\" }}\n              />\n              {/* <IconButton\n                className={classes.addButton}\n                onClick={() => handleplusCourseOutcome()}\n              >\n                <AddIcon />\n              </IconButton>\n              <IconButton\n                className={classes.minusButton}\n                onClick={() => handleMinusCourseOutcome()}\n              >\n                <RemoveIcon />\n              </IconButton> */}\n            </div>\n          ))}\n          <div className={classes.div1}>\n            <div>\n              <Typography className={classes.captionsText}>\n                Reference Books\n              </Typography>\n            </div>\n            {books.map((books, index5) => (\n              <div key={index5} className={classes.insideDiv}>\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Name\"\n                  name=\"Name\"\n                  value={books.Name}\n                  onChange={(event) => handleChangeBooks(index5, event)}\n                  style={{ width: \"15%\" }}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Author\"\n                  name=\"Author\"\n                  value={books.Author}\n                  onChange={(event) => handleChangeBooks(index5, event)}\n                  style={{ width: \"15%\" }}\n                />\n\n                <IconButton\n                  className={classes.addButton}\n                  onClick={() => handlePlusBooks(index5)}\n                >\n                  <AddIcon />\n                </IconButton>\n                <IconButton\n                  className={classes.minusButton}\n                  onClick={() => handleMinusBooks(index5)}\n                >\n                  <RemoveIcon />\n                </IconButton>\n              </div>\n            ))}\n          </div>\n\n          <Button\n            onClick={() => {\n              handleSubmit();\n            }}\n          >\n            submit\n          </Button>\n        </Form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default CourseDescription1;\n",[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/courseDescriptionStyles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/useForm.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/controls/input.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/controls/RadioGroup.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/controls/Controls.js",["203"],[],"import React from \"react\";\nimport Input from \"./input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport DatePicker from \"./DatePicker\";\n\nconst Controls = {\n  Input,\n  RadioGroup,\n  Select,\n  DatePicker,\n};\n\nexport default Controls;\n","/Users/garvitanagpal/reportauto/client/src/components/controls/Select.js",["204","205"],[],"import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select as MuiSelect,\n  MenuItem,\n  FormHelperText,\n} from \"@material-ui/core\";\n\nexport default function Select(props) {\n  const { name, label, value, error = null, onChange, options } = props;\n\n  return (\n    <FormControl variant=\"outlined\">\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect label={label} name={name} value={value} onChange={onChange}>\n        <MenuItem value=\"\">None</MenuItem>\n        {options.map((item) => (\n          <MenuItem key={item.id} value={item.id}>\n            {item.title}\n          </MenuItem>\n        ))}\n      </MuiSelect>\n      {/* {error && <FormHelperText>{error}</FormHelperText>} */}\n    </FormControl>\n  );\n}\n","/Users/garvitanagpal/reportauto/client/src/services/dropdownData.js",["206","207"],[],"import React, { useState } from \"react\";\n\nexport const courseNameItems = (item) => {\n  // { id: 1, title: \"Fundamentals Of Distributed And Cloud Computing\" },\n  // { id: 2, title: \"Computer Networks And Internet Of things\" },\n  // { id: 3, title: \"Marketing Management\" },\n  // { id: 4, title: \"Artificial Intelligence\" },\n  // { id: 5, title: \"Software Engineering\" },\n  // { id: 6, title: \"Physics-2\" },\n  console.log(item);\n  var bucket = [];\n  // bucket.push(courses_dict?.item?.course_name);\n  return bucket;\n};\n\nexport const courseCodeItems = () => [\n  //var bucket = [\n  { id: 1, title: \"123456\" },\n  { id: 2, title: \"123457\" },\n  { id: 3, title: \"123458\" },\n  //  { id: 4, title: \"78GHTY1\" },\n  //  { id: 5, title: \"17HJ890\" },\n  // 123456, 123457, 123458,\n  //];\n\n  //return bucket;\n];\nexport const courses_dict = {\n  123456: {\n    course_code: \"123456\",\n    course_name: \"software eng.\",\n    course_credits: \"4\",\n    contact_hours: \"4\",\n    Branch: \"CSE/IT\",\n    course_outcome: [\n      { index: \"1\", Description: \"its a co1\", cognitive_level: \"co1\" },\n      { index: \"2\", Description: \"its a co2\", cognitive_level: \"co2\" },\n      { index: \"3\", Description: \"its a co3\", cognitive_level: \"co3\" },\n      { index: \"4\", Description: \"its a co4\", cognitive_level: \"co4\" },\n    ],\n    faculty_table: [\n      {\n        faculty_name: \"bhawna\",\n        faculty_subject: \"software eng.\",\n        faculty_id: \"123\",\n        department: \"CSE/IT\",\n      },\n      {\n        faculty_name: \"amit\",\n        faculty_subject: \"software eng.\",\n        faculty_id: \"124\",\n        department: \"CSE/IT\",\n      },\n      {\n        faculty_name: \"seema\",\n        faculty_subject: \"software developement\",\n        faculty_id: \"125\",\n        department: \"CSE/IT\",\n      },\n      {\n        faculty_name: \"aneeta\",\n        faculty_subject: \"software fundamentals\",\n        faculty_id: \"126\",\n        department: \"CSE/IT\",\n      },\n      {\n        faculty_name: \"gautam\",\n        faculty_subject: \"software developemnt\",\n        faculty_id: \"127\",\n        department: \"CSE/IT\",\n      },\n    ],\n  },\n\n  123457: {\n    course_code: \"123457\",\n    course_name: \"cn/iot\",\n    course_credits: \"4\",\n    contact_hours: \"4\",\n    Branch: \"CSE/IT\",\n    course_outcome: [\n      { index: \"1\", Description: \"its a co1\", cognitive_level: \"co1\" },\n      { index: \"2\", Description: \"its a co2\", cognitive_level: \"co2\" },\n      { index: \"3\", Description: \"its a co3\", cognitive_level: \"co3\" },\n      { index: \"4\", Description: \"its a co4\", cognitive_level: \"co4\" },\n    ],\n    faculty_table: [\n      {\n        faculty_name: \"bhawna\",\n        faculty_subject: \"software eng.\",\n        faculty_id: \"123\",\n        department: \"CSE/IT\",\n      },\n      {\n        faculty_name: \"amit\",\n        faculty_subject: \"software eng.\",\n        faculty_id: \"124\",\n        department: \"CSE/IT\",\n      },\n      {\n        faculty_name: \"seema\",\n        faculty_subject: \"software developement\",\n        faculty_id: \"125\",\n        department: \"CSE/IT\",\n      },\n      {\n        faculty_name: \"aneeta\",\n        faculty_subject: \"software fundamentals\",\n        faculty_id: \"126\",\n        department: \"CSE/IT\",\n      },\n      {\n        faculty_name: \"gautam\",\n        faculty_subject: \"software developemnt\",\n        faculty_id: \"127\",\n        department: \"CSE/IT\",\n      },\n    ],\n  },\n  123458: {\n    course_code: \"123458\",\n    course_name: \"VLSI\",\n    course_credits: \"4\",\n    contact_hours: \"4\",\n    Branch: \"ECE\",\n    course_outcome: [\n      { index: \"1\", Description: \"its a co1\", cognitive_level: \"co1\" },\n      { index: \"2\", Description: \"its a co2\", cognitive_level: \"co2\" },\n      { index: \"3\", Description: \"its a co3\", cognitive_level: \"co3\" },\n      { index: \"4\", Description: \"its a co4\", cognitive_level: \"co4\" },\n    ],\n    faculty_table: [\n      {\n        faculty_name: \"bhawna\",\n        faculty_subject: \"Electrical\",\n        faculty_id: \"128\",\n        department: \"ECE\",\n      },\n      {\n        faculty_name: \"amit\",\n        faculty_subject: \"Electrical\",\n        faculty_id: \"124\",\n        department: \"ECE\",\n      },\n      {\n        faculty_name: \"seema\",\n        faculty_subject: \"Electrical\",\n        faculty_id: \"125\",\n        department: \"ECE\",\n      },\n      {\n        faculty_name: \"aneeta\",\n        faculty_subject: \"Electrical\",\n        faculty_id: \"126\",\n        department: \"ECE\",\n      },\n      {\n        faculty_name: \"gautam\",\n        faculty_subject: \"Electrical\",\n        faculty_id: \"127\",\n        department: \"ECE\",\n      },\n    ],\n  },\n};\n","/Users/garvitanagpal/reportauto/client/src/components/controls/DatePicker.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/OpeningReport.js",["208","209","210","211","212","213","214","215","216","217","218","219","220"],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/OpeningReportsStyles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/attainmentReportStyles.js",[],[],"/Users/garvitanagpal/reportauto/client/src/components/Reports/AttainmentReport.js",["221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],[],"import {\n  Grid,\n  Paper,\n  Container,\n  TextField,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport useStyles from \"./attainmentReportStyles\";\nimport { useForm, Form } from \"./useForm\";\nimport Controls from \"../controls/Controls\";\nimport * as dropdownService from \"../../services/dropdownData\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst AttainmentReport = () => {\n  let navigate = useNavigate();\n\n  function handleSubmit() {\n    console.log(\"clicked\");\n    let bucket = [\"123456\", \"123457\", \"123458\"];\n    var obj = {\n      course_code: values.courseCode,\n      NBA_code: values.nbaCode,\n      semester: values.semester,\n      academic_year: values.academicYear,\n      avg_co_attainment_table: attainmentLab,\n      co_po_table_mapping: mappingValues,\n      innovative_evaluation_strategy_used: values.innovationStrategy,\n      innovative_teaching_and_learning_methods_used: values.innovativeTeaching,\n      Suggestions_for_improvement: suggestions,\n    };\n    console.log(obj);\n    axios\n      .post(\"http://localhost:5000/api/postattainmentReport\", obj)\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        navigate(\"successScreen\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  const classes = useStyles();\n  const intialFValues = {\n    innovativeTeaching: \"\",\n    innovationStrategy: \"\",\n    semester: \"\",\n    academicYear: \"\",\n    nbaCode: \"\",\n    courseCode: \"\",\n  };\n  const { values, setValues, handleInputChange } = useForm(intialFValues);\n  const [attainmentLab, setAttainmentLab] = useState([\n    {\n      coNum: \"\",\n      eval1: \"\",\n      labTest1: \"\",\n      eval28: \"\",\n      eval27: \"\",\n      project: \"\",\n      labtest2: \"\",\n      feedback: \"\",\n    },\n  ]);\n  const [suggestions, setSuggestions] = useState([\n    {\n      sNum: \"\",\n      suggestion: \"\",\n      relevanceToCo: \"\",\n      relevanceToPoPso: \"\",\n    },\n  ]);\n  const handleMinusSuggestions = (index2) => {\n    const value = [...suggestions];\n    value.splice(index2, 1);\n    setSuggestions(value);\n  };\n  const handleChangeSuggestions = (index2, event) => {\n    const values = [...suggestions];\n    values[index2][event.target.name] = event.target.value;\n    setSuggestions(values);\n  };\n  const handlePlusSuggestions = (index2, event) => {\n    setSuggestions([\n      ...suggestions,\n      {\n        sNum: \"\",\n        suggestion: \"\",\n        relevanceToCo: \"\",\n        relevanceToPoPso: \"\",\n      },\n    ]);\n  };\n  const handlePlusAttainmentLab = (index1, event) => {\n    setAttainmentLab([\n      ...attainmentLab,\n      {\n        coNum: \"\",\n        eval1: \"\",\n        labTest1: \"\",\n        eval28: \"\",\n        eval27: \"\",\n        project: \"\",\n        labtest2: \"\",\n        feedback: \"\",\n      },\n    ]);\n  };\n\n  const [mappingValues, setMappingValues] = useState([\n    {\n      co: \"\",\n      po1: \"\",\n      po2: \"\",\n      po3: \"\",\n      po4: \"\",\n      po5: \"\",\n      po6: \"\",\n      po7: \"\",\n      po8: \"\",\n      po9: \"\",\n      po10: \"\",\n      po11: \"\",\n      po12: \"\",\n      pso1: \"\",\n      pso2: \"\",\n    },\n  ]);\n  const handleCo = (index4, event) => {\n    const values = [...mappingValues];\n    values[index4][event.target.name] = event.target.value;\n    setMappingValues(values);\n  };\n  const handlePlusMapping = () => {\n    setMappingValues([\n      ...mappingValues,\n      {\n        co: \"\",\n        po1: \"\",\n        po2: \"\",\n        po3: \"\",\n        po4: \"\",\n        po5: \"\",\n        po6: \"\",\n        po7: \"\",\n        po8: \"\",\n        po9: \"\",\n        po10: \"\",\n        po11: \"\",\n        po12: \"\",\n        pso1: \"\",\n        pso2: \"\",\n      },\n    ]);\n  };\n\n  const handleMinuMapping = (index1) => {\n    const value = [...mappingValues];\n    value.splice(index1, 1);\n    setMappingValues(value);\n  };\n  const handleMinusAttainmentLab = (index1) => {\n    const value = [...attainmentLab];\n    value.splice(index1, 1);\n    setAttainmentLab(value);\n  };\n  const handleChangeAttainmentLab = (index1, event) => {\n    const values = [...attainmentLab];\n    values[index1][event.target.name] = event.target.value;\n    setAttainmentLab(values);\n  };\n  return (\n    <div className={classes.mainContainer}>\n      <Paper className={classes.pageContent}>\n        {attainmentLab.map((attainmentLab, index1) => (\n          <div key={index1} className={classes.insideDiv}>\n            <Typography className={classes.typoText}>\n              Average CO-Attainment\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              label=\"COs\"\n              name=\"coNum\"\n              value={attainmentLab.coNum}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"10%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Eval-1[15]\"\n              name=\"eval1\"\n              value={attainmentLab.eval1}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Lab Test-1[20]\"\n              name=\"labTest1\"\n              value={attainmentLab.labTest1}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Eval-2[8]\"\n              name=\"eval28\"\n              value={attainmentLab.eval28}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Eval-2[7]\"\n              name=\"eval27\"\n              value={attainmentLab.eval27}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Project-[15]\"\n              name=\"project\"\n              value={attainmentLab.project}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"LabTest-2[20]\"\n              name=\"labTest2\"\n              value={attainmentLab.labTest2}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Student Feedback\"\n              name=\"feedback\"\n              value={attainmentLab.feedback}\n              onChange={(event) => handleChangeAttainmentLab(index1, event)}\n              style={{ width: \"35%\" }}\n            />\n            <IconButton\n              className={classes.addButton}\n              onClick={() => handlePlusAttainmentLab()}\n            >\n              <AddIcon />\n            </IconButton>\n            <IconButton\n              className={classes.minusButton}\n              onClick={() => handleMinusAttainmentLab()}\n            >\n              <RemoveIcon />\n            </IconButton>\n          </div>\n        ))}\n        {mappingValues.map((mapppingValues, index4) => (\n          <div key={index4} className={classes.insideDiv}>\n            <Typography className={classes.typoText}>\n              CO-PO and CO-PSO Mapping\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              label=\"co\"\n              name=\"co\"\n              value={mappingValues.co}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              label=\"po1\"\n              name=\"po1\"\n              value={mappingValues.po1}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po2\"\n              name=\"po2\"\n              value={mappingValues.po2}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po3\"\n              name=\"po3\"\n              value={mappingValues.po3}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po4\"\n              name=\"po4\"\n              value={mappingValues.po4}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po5\"\n              name=\"po5\"\n              value={mappingValues.po5}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po6\"\n              name=\"po6\"\n              value={mappingValues.po6}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po7\"\n              name=\"po7\"\n              value={mappingValues.po7}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po8\"\n              name=\"po8\"\n              value={mappingValues.po8}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po9\"\n              name=\"po9\"\n              value={mappingValues.po9}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po10\"\n              name=\"po10\"\n              value={mappingValues.po10}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po11\"\n              name=\"po11\"\n              value={mappingValues.po11}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po12\"\n              name=\"po12\"\n              value={mappingValues.po12}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"po12\"\n              name=\"po12\"\n              value={mappingValues.po12}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"pso1\"\n              name=\"pso1\"\n              value={mappingValues.ps01}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"pso2\"\n              name=\"pso2\"\n              value={mappingValues.ps02}\n              onChange={(event) => handleCo(index4, event)}\n              style={{ width: \"5%\" }}\n              className={classes.mapping}\n            />\n\n            <IconButton\n              className={classes.addButton}\n              onClick={() => handlePlusMapping()}\n            >\n              <AddIcon />\n            </IconButton>\n            <IconButton\n              className={classes.minusButton}\n              onClick={() => handleMinuMapping()}\n            >\n              <RemoveIcon />\n            </IconButton>\n          </div>\n        ))}\n        {suggestions.map((suggestions, index2) => (\n          <div key={index2} className={classes.insideDiv}>\n            <Typography className={classes.typoText}>\n              Suggestions for Improvement\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              label=\"sNum\"\n              name=\"sNum\"\n              value={suggestions.sNum}\n              onChange={(event) => handleChangeSuggestions(index2, event)}\n              style={{ width: \"10%\" }}\n              className={classes.mapping}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              label=\"suggestion\"\n              name=\"suggestion\"\n              value={suggestions.suggestion}\n              onChange={(event) => handleChangeSuggestions(index2, event)}\n              style={{ width: \"10%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"relevance To Co\"\n              name=\"relevanceToCo\"\n              value={suggestions.relevanceToCo}\n              onChange={(event) => handleChangeSuggestions(index2, event)}\n              style={{ width: \"20%\" }}\n              className={classes.mapping}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"relevance To Po Pso\"\n              name=\"relevanceToPoPso\"\n              value={suggestions.relevanceToPoPso}\n              onChange={(event) => handleChangeSuggestions(index2, event)}\n              style={{ width: \"20%\" }}\n              className={classes.mapping}\n            />\n\n            <IconButton\n              className={classes.addButton}\n              onClick={() => handlePlusMapping()}\n            >\n              <AddIcon />\n            </IconButton>\n            <IconButton\n              className={classes.minusButton}\n              onClick={() => handleMinuMapping()}\n            >\n              <RemoveIcon />\n            </IconButton>\n          </div>\n        ))}\n\n        <Typography className={classes.typoText}>\n          Innovation Evaluation Strategy Used(If any)\n        </Typography>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          label=\"Innovation Evaluation Strategy Used(If any)\"\n          name=\"innovationStrategy\"\n          value={values.innovationStrategy}\n          onChange={handleInputChange}\n          style={{ width: \"80%\" }}\n        />\n        <Typography className={classes.typoText}>\n          Innovative Teaching and Learning Method Used\n        </Typography>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          label=\"Innovative Teaching and Learning Method  Used\"\n          name=\"innovativeTeaching\"\n          value={values.innovativeTeaching}\n          onChange={handleInputChange}\n          style={{ width: \"80%\" }}\n        />\n        <Typography className={classes.typoText}>Semester</Typography>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          label=\"Semester\"\n          name=\"semester\"\n          value={values.semester}\n          onChange={handleInputChange}\n        />\n        <Typography className={classes.typoText}>NBA code</Typography>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          label=\"NBA Code\"\n          name=\"nbaCode\"\n          value={values.nbaCode}\n          onChange={handleInputChange}\n        />\n        <Typography className={classes.typoText}>Academic Year</Typography>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          label=\"Academic Year\"\n          name=\"academicYear\"\n          value={values.academicYear}\n          onChange={handleInputChange}\n        />\n        <Typography className={classes.typoText}>Course code</Typography>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          label=\"Course Code\"\n          name=\"courseCode\"\n          value={values.courseCode}\n          onChange={handleInputChange}\n        />\n\n        <Button\n          onClick={() => {\n            handleSubmit();\n          }}\n        >\n          submit\n        </Button>\n      </Paper>\n    </div>\n  );\n};\n\nexport default AttainmentReport;\n","/Users/garvitanagpal/reportauto/client/src/components/Screens/successScreen.js",["236"],[],"import { Typography, Paper, Container } from \"@material-ui/core\";\nimport React from \"react\";\nimport useStyles from \"../Reports/successScreenStyles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst SuccessScreen = () => {\n  const classes = useStyles();\n  return (\n    <Container className={classes.mainContainer}>\n      <Paper className={classes.pageContent}>\n        <Typography className={classes.typoText}>SUCCESS</Typography>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SuccessScreen;\n","/Users/garvitanagpal/reportauto/client/src/components/Reports/successScreenStyles.js",[],[],{"ruleId":"237","severity":1,"message":"238","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":14},{"ruleId":"237","severity":1,"message":"241","line":4,"column":25,"nodeType":"239","messageId":"240","endLine":4,"endColumn":31},{"ruleId":"237","severity":1,"message":"242","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":25},{"ruleId":"237","severity":1,"message":"242","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":25},{"ruleId":"237","severity":1,"message":"243","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":16},{"ruleId":"237","severity":1,"message":"244","line":3,"column":41,"nodeType":"239","messageId":"240","endLine":3,"endColumn":46},{"ruleId":"237","severity":1,"message":"245","line":10,"column":8,"nodeType":"239","messageId":"240","endLine":10,"endColumn":12},{"ruleId":"237","severity":1,"message":"246","line":14,"column":10,"nodeType":"239","messageId":"240","endLine":14,"endColumn":16},{"ruleId":"237","severity":1,"message":"247","line":14,"column":18,"nodeType":"239","messageId":"240","endLine":14,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":37,"column":9,"nodeType":"250","endLine":37,"endColumn":26},{"ruleId":"248","severity":1,"message":"249","line":38,"column":9,"nodeType":"250","endLine":38,"endColumn":26},{"ruleId":"237","severity":1,"message":"251","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":12},{"ruleId":"237","severity":1,"message":"252","line":8,"column":8,"nodeType":"239","messageId":"240","endLine":8,"endColumn":12},{"ruleId":"237","severity":1,"message":"253","line":11,"column":10,"nodeType":"239","messageId":"240","endLine":11,"endColumn":22},{"ruleId":"237","severity":1,"message":"254","line":12,"column":10,"nodeType":"239","messageId":"240","endLine":12,"endColumn":24},{"ruleId":"237","severity":1,"message":"255","line":12,"column":26,"nodeType":"239","messageId":"240","endLine":12,"endColumn":34},{"ruleId":"237","severity":1,"message":"256","line":34,"column":10,"nodeType":"239","messageId":"240","endLine":34,"endColumn":26},{"ruleId":"237","severity":1,"message":"257","line":34,"column":28,"nodeType":"239","messageId":"240","endLine":34,"endColumn":47},{"ruleId":"237","severity":1,"message":"258","line":40,"column":10,"nodeType":"239","messageId":"240","endLine":40,"endColumn":22},{"ruleId":"237","severity":1,"message":"259","line":40,"column":24,"nodeType":"239","messageId":"240","endLine":40,"endColumn":39},{"ruleId":"237","severity":1,"message":"260","line":45,"column":10,"nodeType":"239","messageId":"240","endLine":45,"endColumn":17},{"ruleId":"237","severity":1,"message":"261","line":45,"column":19,"nodeType":"239","messageId":"240","endLine":45,"endColumn":29},{"ruleId":"262","severity":1,"message":"263","line":32,"column":29,"nodeType":"264","messageId":"265","endLine":32,"endColumn":31},{"ruleId":"237","severity":1,"message":"266","line":6,"column":3,"nodeType":"239","messageId":"240","endLine":6,"endColumn":13},{"ruleId":"237","severity":1,"message":"243","line":7,"column":3,"nodeType":"239","messageId":"240","endLine":7,"endColumn":9},{"ruleId":"237","severity":1,"message":"267","line":8,"column":3,"nodeType":"239","messageId":"240","endLine":8,"endColumn":7},{"ruleId":"237","severity":1,"message":"268","line":9,"column":3,"nodeType":"239","messageId":"240","endLine":9,"endColumn":13},{"ruleId":"237","severity":1,"message":"269","line":12,"column":8,"nodeType":"239","messageId":"240","endLine":12,"endColumn":13},{"ruleId":"237","severity":1,"message":"270","line":16,"column":10,"nodeType":"239","messageId":"240","endLine":16,"endColumn":36},{"ruleId":"237","severity":1,"message":"251","line":17,"column":8,"nodeType":"239","messageId":"240","endLine":17,"endColumn":12},{"ruleId":"237","severity":1,"message":"271","line":18,"column":8,"nodeType":"239","messageId":"240","endLine":18,"endColumn":12},{"ruleId":"237","severity":1,"message":"272","line":19,"column":8,"nodeType":"239","messageId":"240","endLine":19,"endColumn":16},{"ruleId":"248","severity":1,"message":"249","line":28,"column":9,"nodeType":"250","endLine":28,"endColumn":62},{"ruleId":"273","severity":1,"message":"274","line":56,"column":5,"nodeType":"275","messageId":"265","endLine":56,"endColumn":15},{"ruleId":"237","severity":1,"message":"276","line":2,"column":20,"nodeType":"239","messageId":"240","endLine":2,"endColumn":29},{"ruleId":"237","severity":1,"message":"277","line":18,"column":8,"nodeType":"239","messageId":"240","endLine":18,"endColumn":13},{"ruleId":"237","severity":1,"message":"278","line":19,"column":8,"nodeType":"239","messageId":"240","endLine":19,"endColumn":17},{"ruleId":"237","severity":1,"message":"279","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":17},{"ruleId":"237","severity":1,"message":"280","line":21,"column":8,"nodeType":"239","messageId":"240","endLine":21,"endColumn":22},{"ruleId":"237","severity":1,"message":"281","line":22,"column":8,"nodeType":"239","messageId":"240","endLine":22,"endColumn":17},{"ruleId":"237","severity":1,"message":"282","line":23,"column":8,"nodeType":"239","messageId":"240","endLine":23,"endColumn":16},{"ruleId":"237","severity":1,"message":"283","line":294,"column":9,"nodeType":"239","messageId":"240","endLine":294,"endColumn":27},{"ruleId":"237","severity":1,"message":"284","line":314,"column":9,"nodeType":"239","messageId":"240","endLine":314,"endColumn":17},{"ruleId":"237","severity":1,"message":"285","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"286","line":7,"column":3,"nodeType":"239","messageId":"240","endLine":7,"endColumn":17},{"ruleId":"237","severity":1,"message":"287","line":11,"column":31,"nodeType":"239","messageId":"240","endLine":11,"endColumn":36},{"ruleId":"237","severity":1,"message":"285","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"288","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"276","line":3,"column":20,"nodeType":"239","messageId":"240","endLine":3,"endColumn":29},{"ruleId":"237","severity":1,"message":"289","line":7,"column":3,"nodeType":"239","messageId":"240","endLine":7,"endColumn":12},{"ruleId":"237","severity":1,"message":"277","line":18,"column":8,"nodeType":"239","messageId":"240","endLine":18,"endColumn":13},{"ruleId":"237","severity":1,"message":"278","line":19,"column":8,"nodeType":"239","messageId":"240","endLine":19,"endColumn":17},{"ruleId":"237","severity":1,"message":"279","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":17},{"ruleId":"237","severity":1,"message":"280","line":21,"column":8,"nodeType":"239","messageId":"240","endLine":21,"endColumn":22},{"ruleId":"237","severity":1,"message":"281","line":22,"column":8,"nodeType":"239","messageId":"240","endLine":22,"endColumn":17},{"ruleId":"237","severity":1,"message":"282","line":23,"column":8,"nodeType":"239","messageId":"240","endLine":23,"endColumn":16},{"ruleId":"237","severity":1,"message":"290","line":30,"column":8,"nodeType":"239","messageId":"240","endLine":30,"endColumn":13},{"ruleId":"237","severity":1,"message":"291","line":30,"column":15,"nodeType":"239","messageId":"240","endLine":30,"endColumn":23},{"ruleId":"237","severity":1,"message":"292","line":39,"column":10,"nodeType":"239","messageId":"240","endLine":39,"endColumn":24},{"ruleId":"237","severity":1,"message":"293","line":39,"column":26,"nodeType":"239","messageId":"240","endLine":39,"endColumn":43},{"ruleId":"237","severity":1,"message":"294","line":52,"column":19,"nodeType":"239","messageId":"240","endLine":52,"endColumn":28},{"ruleId":"237","severity":1,"message":"295","line":2,"column":3,"nodeType":"239","messageId":"240","endLine":2,"endColumn":7},{"ruleId":"237","severity":1,"message":"289","line":4,"column":3,"nodeType":"239","messageId":"240","endLine":4,"endColumn":12},{"ruleId":"237","severity":1,"message":"296","line":11,"column":19,"nodeType":"239","messageId":"240","endLine":11,"endColumn":23},{"ruleId":"237","severity":1,"message":"272","line":12,"column":8,"nodeType":"239","messageId":"240","endLine":12,"endColumn":16},{"ruleId":"237","severity":1,"message":"297","line":13,"column":13,"nodeType":"239","messageId":"240","endLine":13,"endColumn":28},{"ruleId":"237","severity":1,"message":"277","line":17,"column":8,"nodeType":"239","messageId":"240","endLine":17,"endColumn":13},{"ruleId":"237","severity":1,"message":"278","line":18,"column":8,"nodeType":"239","messageId":"240","endLine":18,"endColumn":17},{"ruleId":"237","severity":1,"message":"279","line":19,"column":8,"nodeType":"239","messageId":"240","endLine":19,"endColumn":17},{"ruleId":"237","severity":1,"message":"280","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":22},{"ruleId":"237","severity":1,"message":"281","line":21,"column":8,"nodeType":"239","messageId":"240","endLine":21,"endColumn":17},{"ruleId":"237","severity":1,"message":"282","line":22,"column":8,"nodeType":"239","messageId":"240","endLine":22,"endColumn":16},{"ruleId":"237","severity":1,"message":"298","line":31,"column":9,"nodeType":"239","messageId":"240","endLine":31,"endColumn":15},{"ruleId":"237","severity":1,"message":"294","line":64,"column":19,"nodeType":"239","messageId":"240","endLine":64,"endColumn":28},{"ruleId":"237","severity":1,"message":"299","line":85,"column":9,"nodeType":"239","messageId":"240","endLine":85,"endColumn":31},{"ruleId":"237","severity":1,"message":"300","line":95,"column":9,"nodeType":"239","messageId":"240","endLine":95,"endColumn":30},{"ruleId":"237","severity":1,"message":"301","line":4,"column":10,"nodeType":"239","messageId":"240","endLine":4,"endColumn":20},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'CourseDescription' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'pic6' is defined but never used.","'course' is assigned a value but never used.","'setCourse' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Auth' is defined but never used.","'Icon' is defined but never used.","'mergeClasses' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'recommendedBooks' is assigned a value but never used.","'setRecommendedBooks' is assigned a value but never used.","'semesterTime' is assigned a value but never used.","'setSemesterTime' is assigned a value but never used.","'session' is assigned a value but never used.","'setSession' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Typography' is defined but never used.","'text' is defined but never used.","'IconButton' is defined but never used.","'axios' is defined but never used.","'MdOutlineKeyboardArrowDown' is defined but never used.","'Home' is defined but never used.","'Controls' is defined but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","'useEffect' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'handleInputChange1' is assigned a value but never used.","'getValue' is assigned a value but never used.","'React' is defined but never used.","'FormHelperText' is defined but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'jhool' is assigned a value but never used.","'setJhool' is assigned a value but never used.","'departmentName' is assigned a value but never used.","'setDepartmentName' is assigned a value but never used.","'setValues' is assigned a value but never used.","'Grid' is defined but never used.","'Form' is defined but never used.","'dropdownService' is defined but never used.","'bucket' is assigned a value but never used.","'handleMinusSuggestions' is assigned a value but never used.","'handlePlusSuggestions' is assigned a value but never used.","'makeStyles' is defined but never used."]